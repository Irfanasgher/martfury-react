{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LazyLoad from 'react-lazyload';\nimport Link from 'next/link';\nimport { Modal } from 'antd';\nimport ProductDetailQuickView from '../detail/ProductDetailQuickView';\nimport Rating from '../Rating';\nimport { baseUrl } from '../../../repositories/Repository';\nimport { formatCurrency } from '../../../utilities/product-helper';\nimport { addItem } from '../../../store/cart/action';\nimport { addItemToCompare } from '../../../store/compare/action';\nimport { addItemToWishlist } from '../../../store/wishlist/action';\nimport { isStaticData } from '../../../utilities/app-settings';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleAddItemToCart\", e => {\n      e.preventDefault();\n      const {\n        product\n      } = this.props;\n      this.props.dispatch(addItem(product));\n    });\n\n    _defineProperty(this, \"handleAddItemToCompare\", e => {\n      e.preventDefault();\n      const {\n        product\n      } = this.props;\n      this.props.dispatch(addItemToCompare(product));\n    });\n\n    _defineProperty(this, \"handleAddItemToWishlist\", e => {\n      e.preventDefault();\n      const {\n        product\n      } = this.props;\n      this.props.dispatch(addItemToWishlist(product));\n    });\n\n    _defineProperty(this, \"handleShowQuickView\", e => {\n      e.preventDefault();\n      this.setState({\n        isQuickView: true\n      });\n    });\n\n    _defineProperty(this, \"handleHideQuickView\", e => {\n      e.preventDefault();\n      this.setState({\n        isQuickView: false\n      });\n    });\n\n    this.state = {\n      isQuickView: false\n    };\n  }\n\n  render() {\n    const {\n      product,\n      currency\n    } = this.props;\n    let productBadge = null;\n\n    if (product.badge && product.badge !== null) {\n      product.badge.map(badge => {\n        if (badge.type === 'sale') {\n          return productBadge = __jsx(\"div\", {\n            className: \"ps-product__badge\"\n          }, badge.value);\n        } else if (badge.type === 'outStock') {\n          return productBadge = __jsx(\"div\", {\n            className: \"ps-product__badge out-stock\"\n          }, badge.value);\n        } else {\n          return productBadge = __jsx(\"div\", {\n            className: \"ps-product__badge hot\"\n          }, badge.value);\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"ps-product\"\n    }, __jsx(\"div\", {\n      className: \"ps-product__thumbnail\"\n    }, __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", null, __jsx(LazyLoad, null, __jsx(\"img\", {\n      src: isStaticData === false ? `${baseUrl}${product.thumbnail.url}` : product.thumbnail.url,\n      alt: \"martfury\"\n    })))), product.badge ? productBadge : '', __jsx(\"ul\", {\n      className: \"ps-product__actions\"\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Read More\",\n      onClick: this.handleAddItemToCart.bind(this)\n    }, __jsx(\"i\", {\n      className: \"icon-bag2\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Quick View\",\n      onClick: this.handleShowQuickView.bind(this)\n    }, __jsx(\"i\", {\n      className: \"icon-eye\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Add to wishlist\",\n      onClick: this.handleAddItemToWishlist.bind(this)\n    }, __jsx(\"i\", {\n      className: \"icon-heart\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Compare\",\n      onClick: this.handleAddItemToCompare.bind(this)\n    }, __jsx(\"i\", {\n      className: \"icon-chart-bars\"\n    }))))), __jsx(\"div\", {\n      className: \"ps-product__container\"\n    }, __jsx(Link, {\n      href: \"/shop\"\n    }, __jsx(\"a\", {\n      className: \"ps-product__vendor\"\n    }, \"Young Shop\")), __jsx(\"div\", {\n      className: \"ps-product__content\"\n    }, __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", {\n      className: \"ps-product__title\"\n    }, product.title)), __jsx(\"div\", {\n      className: \"ps-product__rating\"\n    }, __jsx(Rating, null), __jsx(\"span\", null, product.ratingCount)), product.is_sale === true ? __jsx(\"p\", {\n      className: \"ps-product__price sale\"\n    }, currency ? currency.symbol : '$', formatCurrency(product.price), __jsx(\"del\", {\n      className: \"ml-2\"\n    }, currency ? currency.symbol : '$', formatCurrency(product.sale_price))) : __jsx(\"p\", {\n      className: \"ps-product__price\"\n    }, currency ? currency.symbol : '$', formatCurrency(product.price))), __jsx(\"div\", {\n      className: \"ps-product__content hover\"\n    }, __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", {\n      className: \"ps-product__title\"\n    }, product.title)), product.is_sale === true ? __jsx(\"p\", {\n      className: \"ps-product__price sale\"\n    }, currency ? currency.symbol : '$', formatCurrency(product.price), ' ', __jsx(\"del\", {\n      className: \"ml-2\"\n    }, currency ? currency.symbol : '$', product.sale_price)) : __jsx(\"p\", {\n      className: \"ps-product__price\"\n    }, currency ? currency.symbol : '$', formatCurrency(product.price)))), __jsx(Modal, {\n      title: product.title,\n      centered: true,\n      footer: null,\n      width: 1024,\n      onCancel: this.handleHideQuickView,\n      visible: this.state.isQuickView\n    }, __jsx(ProductDetailQuickView, {\n      product: product\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.setting;\n};\n\nexport default connect(mapStateToProps)(Product);","map":null,"metadata":{},"sourceType":"module"}