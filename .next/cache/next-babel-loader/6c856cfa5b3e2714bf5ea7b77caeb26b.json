{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { getProductsByKeyword } from '../../../store/product/action';\nimport ProductResult from '../../elements/products/ProductSearchResult';\nimport { connect } from 'react-redux';\n\nclass PanelSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"searchByProductName\", (keyword, object) => {\n      let matches = [];\n      let regexp = new RegExp(keyword.toLowerCase(), 'g');\n      object.forEach(product => {\n        if (product.title.toLowerCase().match(regexp)) matches.push(product);\n      });\n      return matches;\n    });\n\n    this.state = {\n      searchPanel: false,\n      searchProducts: [],\n      keyword: ''\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const keyword = this.state.keyword;\n    Router.push(`/search?keyword=${keyword}`);\n  }\n\n  handleSearch(e) {\n    if (e.target.value !== '') {\n      const keyword = e.target.value;\n      this.props.dispatch(getProductsByKeyword(keyword));\n      this.setState({\n        searchPanel: true,\n        keyword: e.target.value\n      });\n    } else {\n      this.setState({\n        searchPanel: false,\n        searchProducts: []\n      });\n    }\n  }\n\n  render() {\n    const {\n      searchProducts\n    } = this.state;\n    const {\n      searchResults\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"ps-panel__search-results\"\n    }, __jsx(\"form\", {\n      className: \"ps-form--search-mobile\",\n      action: \"/\",\n      method: \"get\"\n    }, __jsx(\"div\", {\n      className: \"form-group--nest\"\n    }, __jsx(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Search something...\",\n      onChange: this.handleSearch.bind(this)\n    }), __jsx(\"button\", null, __jsx(\"i\", {\n      className: \"icon-magnifier\"\n    })))), searchResults && searchResults.map(product => __jsx(ProductResult, {\n      product: product,\n      key: product.id\n    })));\n  }\n\n}\n\nexport default connect(state => state.product)(PanelSearch);","map":null,"metadata":{},"sourceType":"module"}