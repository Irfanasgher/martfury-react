{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../../store/cart/action';\nimport { removeCompareItem } from '../../../store/compare/action';\nimport Link from 'next/link';\nimport { Rate } from 'antd';\n\nclass Compare extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleAddItemToCart\", product => {\n      this.props.dispatch(addItem(product));\n    });\n\n    _defineProperty(this, \"handleRemoveCompareItem\", (e, product) => {\n      e.preventDefault();\n      this.props.dispatch(removeCompareItem(product));\n    });\n  }\n\n  render() {\n    const {\n      compareItems\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"ps-compare ps-section--shopping\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"ps-section__header\"\n    }, __jsx(\"h1\", null, \"Compare Product\")), __jsx(\"div\", {\n      className: \"ps-section__content\"\n    }, compareItems && compareItems.length === 0 ? __jsx(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\"\n    }, \"Compare list is empty!\") : __jsx(\"div\", {\n      className: \"table-responsive\"\n    }, __jsx(\"table\", {\n      className: \"table ps-table--compare\"\n    }, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"heading\",\n      rowSpan: \"2\"\n    }, \"Product\"), compareItems && compareItems.length > 0 ? compareItems.map(product => __jsx(\"td\", {\n      key: product.id\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: e => this.handleRemoveCompareItem(e, product)\n    }, \"Remove\"))) : __jsx(\"td\", null)), __jsx(\"tr\", null, compareItems && compareItems.length > 0 ? compareItems.map(product => __jsx(\"td\", {\n      key: product.id\n    }, __jsx(\"div\", {\n      className: \"ps-product--compare\"\n    }, __jsx(\"div\", {\n      className: \"ps-product__thumbnail\"\n    }, __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      src: product.thumbnail,\n      alt: \"martfury\"\n    })))), __jsx(\"div\", {\n      className: \"ps-product__content\"\n    }, __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", {\n      className: \"ps-product__title\"\n    }, product.title)))))) : __jsx(\"td\", null)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"heading\"\n    }, \"Rating\"), compareItems && compareItems.length > 0 ? compareItems.map(product => __jsx(\"td\", {\n      key: product.id\n    }, __jsx(Rate, {\n      disabled: true,\n      defaultValue: 4\n    }))) : __jsx(\"td\", null)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"heading\"\n    }, \"Price\"), compareItems && compareItems.length > 0 ? compareItems.map(product => {\n      if (product.sale === true) {\n        return __jsx(\"td\", {\n          key: product.id\n        }, __jsx(\"h4\", {\n          className: \"price sale\"\n        }, \"$\", product.price, __jsx(\"del\", null, \"$\", product.salePrice)));\n      } else return __jsx(\"td\", {\n        key: product.id\n      }, __jsx(\"h4\", {\n        className: \"price\"\n      }, \"$\", ' ', product.price));\n    }) : __jsx(\"td\", null)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"heading\"\n    }, \"Sold By\"), compareItems && compareItems.length > 0 ? compareItems.map(product => __jsx(\"td\", {\n      key: product.id\n    }, __jsx(Link, {\n      href: \"/vendor/store-list\"\n    }, __jsx(\"a\", null, product.vendor)))) : __jsx(\"td\", null)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"heading\"\n    }), compareItems && compareItems.length > 0 ? compareItems.map(product => __jsx(\"td\", {\n      key: product.id\n    }, __jsx(\"button\", {\n      className: \"ps-btn\"\n    }, \"Add To Cart\"))) : __jsx(\"td\", null))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.compare;\n};\n\nexport default connect(mapStateToProps)(Compare);","map":null,"metadata":{},"sourceType":"module"}