{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getCollections),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getCollectionByCategories),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport { actionTypes, getCategoriesSuccess, getCollectionsSuccess } from './action';\nimport { isStaticData } from '../../utilities/app-settings';\nimport CollectionRepository from '../../repositories/CollectionRepository';\nimport StaticCollectionRepository from '../../repositories/static/StaticCollectionRepository';\npolyfill();\n\nfunction getCollections(_ref) {\n  var payload, data, _data;\n\n  return _regeneratorRuntime.wrap(function getCollections$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 5;\n          return call(CollectionRepository.getCollections, payload);\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return put(getCollectionsSuccess(data));\n\n        case 8:\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.next = 12;\n          return call(StaticCollectionRepository.getCollections, payload);\n\n        case 12:\n          _data = _context.sent;\n          _context.next = 15;\n          return put(getCollectionsSuccess(_data));\n\n        case 15:\n          _context.next = 20;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 17]]);\n}\n\nfunction getCollectionByCategories(_ref2) {\n  var payload, data, _data2;\n\n  return _regeneratorRuntime.wrap(function getCollectionByCategories$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 5;\n          return call(CollectionRepository.getCategoriesBySlug, payload);\n\n        case 5:\n          data = _context2.sent;\n          _context2.next = 8;\n          return put(getCategoriesSuccess(data));\n\n        case 8:\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.next = 12;\n          return call(StaticCollectionRepository.getCollections, payload);\n\n        case 12:\n          _data2 = _context2.sent;\n          _context2.next = 15;\n          return put(getCollectionsSuccess(_data2));\n\n        case 15:\n          _context2.next = 20;\n          break;\n\n        case 17:\n          _context2.prev = 17;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 17]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.GET_COLLECTIONS, getCollections)]);\n\n        case 2:\n          _context3.next = 4;\n          return all([takeEvery(actionTypes.GET_CATEGORIES, getCollectionByCategories)]);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}