{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport products from '../../public/static/data/static-products';\nimport brands from '../../public/static/data/static-brands';\nimport categories from '../../public/static/data/static-categories.json';\n\nvar StaticProductRepository =\n/*#__PURE__*/\nfunction () {\n  function StaticProductRepository(callback) {\n    _classCallCheck(this, StaticProductRepository);\n\n    this.callback = callback;\n  }\n\n  _createClass(StaticProductRepository, [{\n    key: \"getRecords\",\n    value: function getRecords() {\n      return products;\n    }\n  }, {\n    key: \"getTotalRecords\",\n    value: function getTotalRecords() {\n      return products.length;\n    }\n  }, {\n    key: \"getBrands\",\n    value: function getBrands() {\n      return brands;\n    }\n  }, {\n    key: \"getProductCategories\",\n    value: function getProductCategories() {\n      return categories;\n    }\n  }, {\n    key: \"getProductsById\",\n    value: function getProductsById(payload) {\n      return products.find(function (product) {\n        return product.id = payload;\n      });\n    }\n  }, {\n    key: \"getProductsByCategory\",\n    value: function getProductsByCategory(payload) {\n      console.log(payload);\n      var category = categories.find(function (category) {\n        return category.slug === payload;\n      });\n\n      if (category !== undefined) {\n        return category.products;\n      } else {\n        return [];\n      }\n    }\n  }, {\n    key: \"getProductsByBrands\",\n    value: function getProductsByBrands(payload) {\n      var result = brands.filter(function (_ref) {\n        var id = _ref.id;\n        return payload.includes(id);\n      });\n      return result;\n    }\n  }, {\n    key: \"getProductsByPriceRange\",\n    value: function getProductsByPriceRange(payload) {\n      return products.filter(function (product) {\n        return product.price >= payload.price_gt && product.price <= payload.price_lt;\n      });\n    }\n  }, {\n    key: \"getProductsByKeyword\",\n    value: function getProductsByKeyword(payload) {\n      var regexp = new RegExp(payload.toLowerCase(), 'g');\n      return products.filter(function (product) {\n        return product.title.toLowerCase().match(regexp);\n      });\n    }\n  }]);\n\n  return StaticProductRepository;\n}();\n\nexport default new StaticProductRepository();","map":null,"metadata":{},"sourceType":"module"}