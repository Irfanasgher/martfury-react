{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\the-hexaa\\\\ReactJS\\\\martfury_react_package_1_3\\\\martfury-react-1_3\\\\components\\\\shared\\\\panel\\\\PanelMenu.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nimport { menuPrimary } from '../../../public/static/data/menu';\nimport Link from 'next/link';\nvar SubMenu = Menu.SubMenu;\n\nvar PanelMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PanelMenu, _Component);\n\n  function PanelMenu(props) {\n    var _this;\n\n    _classCallCheck(this, PanelMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PanelMenu).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"rootSubmenuKeys\", ['sub1', 'sub2', 'sub4']);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      openKeys: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenChange\", function (openKeys) {\n      var latestOpenKey = openKeys.find(function (key) {\n        return _this.state.openKeys.indexOf(key) === -1;\n      });\n\n      if (_this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        _this.setState({\n          openKeys: openKeys\n        });\n      } else {\n        _this.setState({\n          openKeys: latestOpenKey ? [latestOpenKey] : []\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(PanelMenu, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Menu, {\n        mode: \"inline\",\n        openKeys: this.state.openKeys,\n        onOpenChange: this.onOpenChange,\n        className: \"menu--mobile-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, menuPrimary.menu_1.map(function (item) {\n        if (item.subMenu) {\n          return __jsx(SubMenu, {\n            key: item.text,\n            title: __jsx(Link, {\n              href: item.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, __jsx(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            }, item.text)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, item.subMenu.map(function (subItem) {\n            return __jsx(Menu.Item, {\n              key: subItem.text,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52\n              },\n              __self: this\n            }, __jsx(Link, {\n              href: subItem.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, __jsx(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, subItem.text)));\n          }));\n        } else if (item.megaContent) {\n          return __jsx(SubMenu, {\n            key: item.text,\n            title: __jsx(Link, {\n              href: item.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, __jsx(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, item.text)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, item.megaContent.map(function (megaItem) {\n            return __jsx(SubMenu, {\n              key: megaItem.heading,\n              title: __jsx(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 72\n                },\n                __self: this\n              }, megaItem.heading),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, megaItem.megaItems.map(function (megaSubItem) {\n              return __jsx(Menu.Item, {\n                key: megaSubItem.text,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75\n                },\n                __self: this\n              }, __jsx(Link, {\n                href: item.url,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, __jsx(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              }, megaSubItem.text)));\n            }));\n          }));\n        } else {\n          return __jsx(Menu.Item, {\n            key: item.text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, item.type === 'dynamic' ? __jsx(Link, {\n            href: \"\".concat(item.url, \"/[pid]\"),\n            as: \"\".concat(item.url, \"/\").concat(item.endPoint),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"l\", __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, item.text)) : __jsx(Link, {\n            href: item.url,\n            as: item.alias,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, item.text)));\n        }\n      }));\n    }\n  }]);\n\n  return PanelMenu;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state.setting;\n};\n\nexport default connect(mapStateToProps)(PanelMenu);","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/components/shared/panel/PanelMenu.jsx"],"names":["React","Component","connect","Menu","menuPrimary","Link","SubMenu","PanelMenu","props","openKeys","latestOpenKey","find","key","state","indexOf","rootSubmenuKeys","setState","onOpenChange","menu_1","map","item","subMenu","text","url","subItem","megaContent","megaItem","heading","megaItems","megaSubItem","type","endPoint","alias","mapStateToProps","setting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Menu } from 'antd';\nimport { menuPrimary } from '../../../public/static/data/menu';\nimport Link from 'next/link';\n\nconst { SubMenu } = Menu;\n\nclass PanelMenu extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\n\n    state = {\n        openKeys: [],\n    };\n\n    onOpenChange = (openKeys) => {\n        const latestOpenKey = openKeys.find(\n            (key) => this.state.openKeys.indexOf(key) === -1\n        );\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({ openKeys });\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Menu\n                mode=\"inline\"\n                openKeys={this.state.openKeys}\n                onOpenChange={this.onOpenChange}\n                className=\"menu--mobile-2\">\n                {menuPrimary.menu_1.map((item) => {\n                    if (item.subMenu) {\n                        return (\n                            <SubMenu\n                                key={item.text}\n                                title={\n                                    <Link href={item.url}>\n                                        <a>{item.text}</a>\n                                    </Link>\n                                }>\n                                {item.subMenu.map((subItem) => (\n                                    <Menu.Item key={subItem.text}>\n                                        <Link href={subItem.url}>\n                                            <a>{subItem.text}</a>\n                                        </Link>\n                                    </Menu.Item>\n                                ))}\n                            </SubMenu>\n                        );\n                    } else if (item.megaContent) {\n                        return (\n                            <SubMenu\n                                key={item.text}\n                                title={\n                                    <Link href={item.url}>\n                                        <a>{item.text}</a>\n                                    </Link>\n                                }>\n                                {item.megaContent.map((megaItem) => (\n                                    <SubMenu\n                                        key={megaItem.heading}\n                                        title={<span>{megaItem.heading}</span>}>\n                                        {megaItem.megaItems.map(\n                                            (megaSubItem) => (\n                                                <Menu.Item\n                                                    key={megaSubItem.text}>\n                                                    <Link href={item.url}>\n                                                        <a>\n                                                            {megaSubItem.text}\n                                                        </a>\n                                                    </Link>\n                                                </Menu.Item>\n                                            )\n                                        )}\n                                    </SubMenu>\n                                ))}\n                            </SubMenu>\n                        );\n                    } else {\n                        return (\n                            <Menu.Item key={item.text}>\n                                {item.type === 'dynamic' ? (\n                                    <Link\n                                        href={`${item.url}/[pid]`}\n                                        as={`${item.url}/${item.endPoint}`}>\n                                        l<a>{item.text}</a>\n                                    </Link>\n                                ) : (\n                                    <Link href={item.url} as={item.alias}>\n                                        <a>{item.text}</a>\n                                    </Link>\n                                )}\n                            </Menu.Item>\n                        );\n                    }\n                })}\n            </Menu>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state.setting;\n};\n\nexport default connect(mapStateToProps)(PanelMenu);\n"]},"metadata":{},"sourceType":"module"}