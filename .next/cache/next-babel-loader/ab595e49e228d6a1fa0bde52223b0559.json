{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './action';\nexport const initialState = {\n  allProducts: null,\n  singleProduct: null,\n  error: false,\n  totalProducts: 0,\n  categories: null,\n  brands: [],\n  productsLoading: true,\n  productLoading: true,\n  searchResults: null\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {}, {\n        allProducts: action.data,\n        productsLoading: false\n      });\n\n    case actionTypes.GET_TOTAL_OF_PRODUCTS_SUCCESS:\n      return _objectSpread({}, state, {}, {\n        totalProducts: action.payload\n      });\n\n    case actionTypes.GET_BRANDS_SUCCESS:\n      return _objectSpread({}, state, {}, {\n        brands: action.payload\n      });\n\n    case actionTypes.GET_PRODUCT_CATEGORIES_SUCCESS:\n      return _objectSpread({}, state, {}, {\n        categories: action.payload\n      });\n\n    case actionTypes.GET_PRODUCT_BY_ID_SUCCESS:\n      return _objectSpread({}, state, {}, {\n        singleProduct: action.data,\n        productLoading: false\n      });\n\n    case actionTypes.GET_PRODUCTS_BY_KEYWORD_SUCCESS:\n      return _objectSpread({}, state, {}, {\n        searchResults: action.payload\n      });\n\n    case actionTypes.GET_PRODUCTS_ERROR:\n      return _objectSpread({}, state, {}, {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}