{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCartError, getCartSuccess, updateCartSuccess, updateCartError } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nexport const calculateAmount = obj => Object.values(obj).reduce((acc, {\n  quantity,\n  price\n}) => acc + quantity * price, 0).toFixed(2);\n\nfunction* getCartSaga() {\n  try {\n    yield put(getCartSuccess());\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* addItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const localCart = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n    let currentCart = JSON.parse(localCart);\n    let existItem = currentCart.cartItems.find(item => item.id === product.id);\n\n    if (existItem) {\n      existItem.quantity += product.quantity;\n    } else {\n      if (!product.quantity) {\n        product.quantity = 1;\n      }\n\n      currentCart.cartItems.push(product);\n    }\n\n    currentCart.amount = calculateAmount(currentCart.cartItems);\n    currentCart.cartTotal++;\n    yield put(updateCartSuccess(currentCart));\n    modalSuccess('success');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* removeItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let index = localCart.cartItems.indexOf(product);\n    localCart.cartTotal = localCart.cartTotal - product.quantity;\n    localCart.cartItems.splice(index, 1);\n    localCart.amount = calculateAmount(localCart.cartItems);\n\n    if (localCart.cartItems.length === 0) {\n      localCart.cartItems = [];\n      localCart.amount = 0;\n      localCart.cartTotal = 0;\n    }\n\n    yield put(updateCartSuccess(localCart));\n    modalWarning('warning');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* increaseQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let selectedItem = localCart.cartItems.find(item => item.id === product.id);\n\n    if (selectedItem) {\n      selectedItem.quantity++;\n      localCart.cartTotal++;\n      localCart.amount = calculateAmount(localCart.cartItems);\n    }\n\n    yield put(updateCartSuccess(localCart));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n    let selectedItem = localCart.cartItems.find(item => item.id === product.id);\n\n    if (selectedItem) {\n      selectedItem.quantity--;\n      localCart.cartTotal--;\n      localCart.amount = calculateAmount(localCart.cartItems);\n    }\n\n    yield put(updateCartSuccess(localCart));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* clearCartSaga() {\n  try {\n    const emptyCart = {\n      cartItems: [],\n      amount: 0,\n      cartTotal: 0\n    };\n    yield put(updateCartSuccess(emptyCart));\n  } catch (err) {\n    yield put(updateCartError(err));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n  yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n  yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}","map":{"version":3,"sources":["C:/chc-ui/store/cart/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","getCartError","getCartSuccess","updateCartSuccess","updateCartError","modalSuccess","type","message","description","duration","modalWarning","calculateAmount","obj","Object","values","reduce","acc","quantity","price","toFixed","getCartSaga","err","addItemSaga","payload","product","localCart","JSON","parse","localStorage","getItem","cart","currentCart","existItem","cartItems","find","item","id","push","amount","cartTotal","removeItemSaga","index","indexOf","splice","length","increaseQtySaga","selectedItem","decreaseItemQtySaga","clearCartSaga","emptyCart","rootSaga","GET_CART","ADD_ITEM","REMOVE_ITEM","INCREASE_QTY","DECREASE_QTY"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    actionTypes,\r\n    getCartError,\r\n    getCartSuccess,\r\n    updateCartSuccess,\r\n    updateCartError,\r\n} from './action';\r\n\r\nconst modalSuccess = type => {\r\n    notification[type]({\r\n        message: 'Success',\r\n        description: 'This product has been added to your cart!',\r\n        duration: 1,\r\n    });\r\n};\r\nconst modalWarning = type => {\r\n    notification[type]({\r\n        message: 'Remove A Item',\r\n        description: 'This product has been removed from your cart!',\r\n        duration: 1,\r\n    });\r\n};\r\n\r\nexport const calculateAmount = obj =>\r\n    Object.values(obj)\r\n        .reduce((acc, { quantity, price }) => acc + quantity * price, 0)\r\n        .toFixed(2);\r\n\r\nfunction* getCartSaga() {\r\n    try {\r\n        yield put(getCartSuccess());\r\n    } catch (err) {\r\n        yield put(getCartError(err));\r\n    }\r\n}\r\n\r\nfunction* addItemSaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        const localCart = JSON.parse(localStorage.getItem('persist:martfury'))\r\n            .cart;\r\n        let currentCart = JSON.parse(localCart);\r\n        let existItem = currentCart.cartItems.find(\r\n            item => item.id === product.id\r\n        );\r\n        if (existItem) {\r\n            existItem.quantity += product.quantity;\r\n        } else {\r\n            if (!product.quantity) {\r\n                product.quantity = 1;\r\n            }\r\n            currentCart.cartItems.push(product);\r\n        }\r\n        currentCart.amount = calculateAmount(currentCart.cartItems);\r\n        currentCart.cartTotal++;\r\n        yield put(updateCartSuccess(currentCart));\r\n        modalSuccess('success');\r\n    } catch (err) {\r\n        yield put(getCartError(err));\r\n    }\r\n}\r\n\r\nfunction* removeItemSaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        let localCart = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\r\n        );\r\n        let index = localCart.cartItems.indexOf(product);\r\n        localCart.cartTotal = localCart.cartTotal - product.quantity;\r\n        localCart.cartItems.splice(index, 1);\r\n        localCart.amount = calculateAmount(localCart.cartItems);\r\n        if (localCart.cartItems.length === 0) {\r\n            localCart.cartItems = [];\r\n            localCart.amount = 0;\r\n            localCart.cartTotal = 0;\r\n        }\r\n        yield put(updateCartSuccess(localCart));\r\n        modalWarning('warning');\r\n    } catch (err) {\r\n        yield put(getCartError(err));\r\n    }\r\n}\r\n\r\nfunction* increaseQtySaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        let localCart = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\r\n        );\r\n        let selectedItem = localCart.cartItems.find(\r\n            item => item.id === product.id\r\n        );\r\n        if (selectedItem) {\r\n            selectedItem.quantity++;\r\n            localCart.cartTotal++;\r\n            localCart.amount = calculateAmount(localCart.cartItems);\r\n        }\r\n        yield put(updateCartSuccess(localCart));\r\n    } catch (err) {\r\n        yield put(getCartError(err));\r\n    }\r\n}\r\n\r\nfunction* decreaseItemQtySaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        const localCart = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\r\n        );\r\n        let selectedItem = localCart.cartItems.find(\r\n            item => item.id === product.id\r\n        );\r\n\r\n        if (selectedItem) {\r\n            selectedItem.quantity--;\r\n            localCart.cartTotal--;\r\n            localCart.amount = calculateAmount(localCart.cartItems);\r\n        }\r\n        yield put(updateCartSuccess(localCart));\r\n    } catch (err) {\r\n        yield put(getCartError(err));\r\n    }\r\n}\r\n\r\nfunction* clearCartSaga() {\r\n    try {\r\n        const emptyCart = {\r\n            cartItems: [],\r\n            amount: 0,\r\n            cartTotal: 0,\r\n        };\r\n        yield put(updateCartSuccess(emptyCart));\r\n    } catch (err) {\r\n        yield put(updateCartError(err));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\r\n    yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\r\n    yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\r\n    yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\r\n    yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}