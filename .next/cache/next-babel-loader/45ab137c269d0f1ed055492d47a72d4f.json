{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { notification } from 'antd';\nimport { connect } from 'react-redux';\nimport { changeCurrency } from '../../../../store/setting/action';\n\nclass CurrencyDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChangeCurrency\", (e, currency) => {\n      e.preventDefault();\n      this.props.dispatch(changeCurrency(currency));\n    });\n  }\n\n  handleFeatureWillUpdate(e) {\n    e.preventDefault();\n    notification.open({\n      message: 'Opp! Something went wrong.',\n      description: 'This feature has been updated later!',\n      duration: 500\n    });\n  }\n\n  render() {\n    const {\n      currency\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"ps-dropdown\"\n    }, currency ? __jsx(\"a\", {\n      href: \"/\",\n      onClick: e => e.preventDefault()\n    }, currency.text) : '', __jsx(\"ul\", {\n      className: \"ps-dropdown-menu\"\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"/\",\n      onClick: e => this.handleChangeCurrency(e, {\n        symbol: '$',\n        text: 'USD'\n      })\n    }, \"USD\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"/\",\n      onClick: e => this.handleChangeCurrency(e, {\n        symbol: '€',\n        text: 'EURO'\n      })\n    }, \"EURO\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"/\",\n      onClick: e => this.handleChangeCurrency(e, {\n        symbol: '£',\n        text: 'GBP'\n      })\n    }, \"GBP\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.setting;\n};\n\nexport default connect(mapStateToProps)(CurrencyDropdown);","map":null,"metadata":{},"sourceType":"module"}