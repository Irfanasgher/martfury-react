{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst bindMiddleware = middleware => {\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nconst persistConfig = {\n  key: 'martfury',\n  storage,\n  whitelist: ['cart', 'compare', 'auth', 'wishlist']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nfunction configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(persistedReducer, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/chc-ui/store/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","persistReducer","storage","rootReducer","rootSaga","bindMiddleware","middleware","composeWithDevTools","require","persistConfig","key","whitelist","persistedReducer","configureStore","initialState","sagaMiddleware","store","sagaTask","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,cAAc,GAAGC,UAAU,IAAI;AACjC,YAA2C;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AACA,WAAOD,mBAAmB,CAACT,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAA1B;AACH;;AACD,SAAOR,eAAe,CAAC,GAAGQ,UAAJ,CAAtB;AACH,CAND;;AAQA,MAAMG,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,UADa;AAElBR,EAAAA,OAFkB;AAGlBS,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,MAApB,EAA4B,UAA5B;AAHO,CAAtB;AAMA,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBN,WAAhB,CAAvC;;AAEA,SAASU,cAAT,CAAwBC,YAAxB,EAAsC;AAClC,QAAMC,cAAc,GAAGf,oBAAoB,EAA3C;AACA,QAAMgB,KAAK,GAAGjB,WAAW,CACrBa,gBADqB,EAErBE,YAFqB,EAGrBT,cAAc,CAAC,CAACU,cAAD,CAAD,CAHO,CAAzB;AAMAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH;;AAED,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst bindMiddleware = middleware => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const { composeWithDevTools } = require('redux-devtools-extension');\r\n        return composeWithDevTools(applyMiddleware(...middleware));\r\n    }\r\n    return applyMiddleware(...middleware);\r\n};\r\n\r\nconst persistConfig = {\r\n    key: 'martfury',\r\n    storage,\r\n    whitelist: ['cart', 'compare', 'auth', 'wishlist'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(\r\n        persistedReducer,\r\n        initialState,\r\n        bindMiddleware([sagaMiddleware])\r\n    );\r\n\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}