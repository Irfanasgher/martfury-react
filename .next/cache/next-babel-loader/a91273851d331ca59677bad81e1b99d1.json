{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nvar CountDown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountDown, _Component);\n\n  function CountDown(props) {\n    var _this;\n\n    _classCallCheck(this, CountDown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CountDown).call(this, props));\n    _this.state = {\n      seconds: null,\n      minutes: null,\n      hours: null,\n      days: null\n    };\n    return _this;\n  }\n\n  _createClass(CountDown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        var _this2$props = _this2.props,\n            timeTillDate = _this2$props.timeTillDate,\n            timeFormat = _this2$props.timeFormat;\n        var then = moment(timeTillDate, timeFormat);\n        var now = moment();\n        var countdown = moment(then - now);\n        var days = countdown.format('D');\n        var hours = countdown.format('HH');\n        var minutes = countdown.format('mm');\n        var seconds = countdown.format('ss');\n\n        _this2.setState({\n          days: days,\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          days = _this$state.days,\n          hours = _this$state.hours,\n          minutes = _this$state.minutes,\n          seconds = _this$state.seconds;\n      return __jsx(\"ul\", {\n        className: \"ps-countdown\"\n      }, __jsx(\"li\", null, __jsx(\"span\", {\n        className: \"days\"\n      }, days), __jsx(\"p\", null, \"Days\")), __jsx(\"li\", null, __jsx(\"span\", {\n        className: \"hours\"\n      }, hours), __jsx(\"p\", null, \"Hours\")), __jsx(\"li\", null, __jsx(\"span\", {\n        className: \"minutes\"\n      }, minutes), __jsx(\"p\", null, \"Minutes\")), __jsx(\"li\", null, __jsx(\"span\", {\n        className: \"seconds\"\n      }, seconds), __jsx(\"p\", null, \"Seconds\")));\n    }\n  }]);\n\n  return CountDown;\n}(Component);\n\nexport default CountDown;","map":null,"metadata":{},"sourceType":"module"}