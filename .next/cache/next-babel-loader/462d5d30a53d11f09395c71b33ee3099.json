{"ast":null,"code":"import { all, put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport blogGrid from '../../public/static/data/blog-grid';\nimport { actionTypes, getPostsSuccess, getFeaturedPostSuccess, getPostCategoriesSuccess, getRecentPostsSuccess, getPostsError, getRecentPostsError, getFeaturedPostError, getPostCategoriesError } from './action';\npolyfill();\n\nfunction* getPostsSaga() {\n  try {\n    const data = blogGrid.posts;\n    yield put(getPostsSuccess(data));\n  } catch (err) {\n    yield put(getPostsError(err));\n  }\n}\n\nfunction* getFeaturedPostSaga() {\n  try {\n    const data = blogGrid.postFeatures;\n    yield put(getFeaturedPostSuccess(data));\n  } catch (err) {\n    yield put(getFeaturedPostError(err));\n  }\n}\n\nfunction* getRecentPostSaga() {\n  try {\n    const data = blogGrid.recentPosts;\n    yield put(getRecentPostsSuccess(data));\n  } catch (err) {\n    yield put(getRecentPostsError(err));\n  }\n}\n\nfunction* getPostCategories() {\n  try {\n    const data = blogGrid.blogCategories;\n    yield put(getPostCategoriesSuccess(data));\n  } catch (err) {\n    yield put(getPostCategoriesError(err));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_POSTS, getPostsSaga), takeEvery(actionTypes.GET_FEATURED_POST, getFeaturedPostSaga), takeEvery(actionTypes.GET_RECENT_POSTS, getRecentPostSaga), takeEvery(actionTypes.GET_POST_CATEGORIES, getPostCategories)]);\n}","map":null,"metadata":{},"sourceType":"module"}