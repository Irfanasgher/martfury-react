{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getCartSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addItemSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeItemSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(increaseQtySaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(decreaseItemQtySaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(clearCartSaga),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCartError, getCartSuccess, updateCartSuccess, updateCartError } from './action';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nexport var calculateAmount = function calculateAmount(obj) {\n  return Object.values(obj).reduce(function (acc, _ref) {\n    var quantity = _ref.quantity,\n        price = _ref.price;\n    return acc + quantity * price;\n  }, 0).toFixed(2);\n};\n\nfunction getCartSaga() {\n  return _regeneratorRuntime.wrap(function getCartSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(getCartSuccess());\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 9;\n          return put(getCartError(_context.t0));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nfunction addItemSaga(payload) {\n  var product, localCart, currentCart, existItem;\n  return _regeneratorRuntime.wrap(function addItemSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n          currentCart = JSON.parse(localCart);\n          existItem = currentCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (existItem) {\n            existItem.quantity += product.quantity;\n          } else {\n            if (!product.quantity) {\n              product.quantity = 1;\n            }\n\n            currentCart.cartItems.push(product);\n          }\n\n          currentCart.amount = calculateAmount(currentCart.cartItems);\n          currentCart.cartTotal++;\n          _context2.next = 10;\n          return put(updateCartSuccess(currentCart));\n\n        case 10:\n          modalSuccess('success');\n          _context2.next = 17;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 17;\n          return put(getCartError(_context2.t0));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction removeItemSaga(payload) {\n  var product, localCart, index;\n  return _regeneratorRuntime.wrap(function removeItemSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n          index = localCart.cartItems.indexOf(product);\n          localCart.cartTotal = localCart.cartTotal - product.quantity;\n          localCart.cartItems.splice(index, 1);\n          localCart.amount = calculateAmount(localCart.cartItems);\n\n          if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n          }\n\n          _context3.next = 10;\n          return put(updateCartSuccess(localCart));\n\n        case 10:\n          modalWarning('warning');\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 17;\n          return put(getCartError(_context3.t0));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction increaseQtySaga(payload) {\n  var product, localCart, selectedItem;\n  return _regeneratorRuntime.wrap(function increaseQtySaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n          selectedItem = localCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n          }\n\n          _context4.next = 7;\n          return put(updateCartSuccess(localCart));\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put(getCartError(_context4.t0));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction decreaseItemQtySaga(payload) {\n  var product, localCart, selectedItem;\n  return _regeneratorRuntime.wrap(function decreaseItemQtySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n          selectedItem = localCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n          }\n\n          _context5.next = 7;\n          return put(updateCartSuccess(localCart));\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put(getCartError(_context5.t0));\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction clearCartSaga() {\n  var emptyCart;\n  return _regeneratorRuntime.wrap(function clearCartSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0\n          };\n          _context6.next = 4;\n          return put(updateCartSuccess(emptyCart));\n\n        case 4:\n          _context6.next = 10;\n          break;\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 10;\n          return put(updateCartError(_context6.t0));\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n\n        case 2:\n          _context7.next = 4;\n          return all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n\n        case 4:\n          _context7.next = 6;\n          return all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n\n        case 6:\n          _context7.next = 8;\n          return all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n\n        case 8:\n          _context7.next = 10;\n          return all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/store/cart/saga.js"],"names":["getCartSaga","addItemSaga","removeItemSaga","increaseQtySaga","decreaseItemQtySaga","clearCartSaga","rootSaga","all","put","takeEvery","notification","actionTypes","getCartError","getCartSuccess","updateCartSuccess","updateCartError","modalSuccess","type","message","description","duration","modalWarning","calculateAmount","obj","Object","values","reduce","acc","quantity","price","toFixed","payload","product","localCart","JSON","parse","localStorage","getItem","cart","currentCart","existItem","cartItems","find","item","id","push","amount","cartTotal","index","indexOf","splice","length","selectedItem","emptyCart","GET_CART","ADD_ITEM","REMOVE_ITEM","INCREASE_QTY","DECREASE_QTY"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\n\nimport {\n    actionTypes,\n    getCartError,\n    getCartSuccess,\n    updateCartSuccess,\n    updateCartError,\n} from './action';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Success',\n        description: 'This product has been added to your cart!',\n        duration: 1,\n    });\n};\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Remove A Item',\n        description: 'This product has been removed from your cart!',\n        duration: 1,\n    });\n};\n\nexport const calculateAmount = obj =>\n    Object.values(obj)\n        .reduce((acc, { quantity, price }) => acc + quantity * price, 0)\n        .toFixed(2);\n\nfunction* getCartSaga() {\n    try {\n        yield put(getCartSuccess());\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* addItemSaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(localStorage.getItem('persist:martfury'))\n            .cart;\n        let currentCart = JSON.parse(localCart);\n        let existItem = currentCart.cartItems.find(\n            item => item.id === product.id\n        );\n        if (existItem) {\n            existItem.quantity += product.quantity;\n        } else {\n            if (!product.quantity) {\n                product.quantity = 1;\n            }\n            currentCart.cartItems.push(product);\n        }\n        currentCart.amount = calculateAmount(currentCart.cartItems);\n        currentCart.cartTotal++;\n        yield put(updateCartSuccess(currentCart));\n        modalSuccess('success');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* removeItemSaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let index = localCart.cartItems.indexOf(product);\n        localCart.cartTotal = localCart.cartTotal - product.quantity;\n        localCart.cartItems.splice(index, 1);\n        localCart.amount = calculateAmount(localCart.cartItems);\n        if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n        }\n        yield put(updateCartSuccess(localCart));\n        modalWarning('warning');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* increaseQtySaga(payload) {\n    try {\n        const { product } = payload;\n        let localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            item => item.id === product.id\n        );\n        if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n    try {\n        const { product } = payload;\n        const localCart = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).cart\n        );\n        let selectedItem = localCart.cartItems.find(\n            item => item.id === product.id\n        );\n\n        if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n        }\n        yield put(updateCartSuccess(localCart));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* clearCartSaga() {\n    try {\n        const emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0,\n        };\n        yield put(updateCartSuccess(emptyCart));\n    } catch (err) {\n        yield put(updateCartError(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n    yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n    yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n    yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n    yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}