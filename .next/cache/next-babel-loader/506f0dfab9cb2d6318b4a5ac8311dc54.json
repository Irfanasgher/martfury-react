{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProducts),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getTotalOfProducts),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getBrands),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProductCategories),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProductById),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProductByCategory),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProductByPriceRange),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProductByBrand),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getProductByKeyword),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery, call } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport ProductRepository from '../../repositories/ProductRepository';\nimport StaticProductRepository from '../../repositories/static/StaticProductRepository';\nimport { actionTypes, getProductsError, getProductsSuccess, getSingleProductsSuccess, getTotalProductsSuccess, getProductCategoriesSuccess, getBrandsSuccess, getProductByKeywordsSuccess } from './action';\nimport { isStaticData } from '../../utilities/app-settings';\npolyfill();\n\nfunction getProducts(_ref) {\n  var payload, data, _data;\n\n  return _regeneratorRuntime.wrap(function getProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 5;\n          return call(ProductRepository.getRecords, payload);\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return put(getProductsSuccess(data));\n\n        case 8:\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.next = 12;\n          return call(StaticProductRepository.getRecords);\n\n        case 12:\n          _data = _context.sent;\n          _context.next = 15;\n          return put(getProductsSuccess(_data));\n\n        case 15:\n          _context.next = 21;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 21;\n          return put(getProductsError(_context.t0));\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 17]]);\n}\n\nfunction getTotalOfProducts() {\n  var result, _result;\n\n  return _regeneratorRuntime.wrap(function getTotalOfProducts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          if (!(isStaticData === false)) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 4;\n          return call(ProductRepository.getTotalRecords);\n\n        case 4:\n          result = _context2.sent;\n          _context2.next = 7;\n          return put(getTotalProductsSuccess(result));\n\n        case 7:\n          _context2.next = 14;\n          break;\n\n        case 9:\n          _context2.next = 11;\n          return call(StaticProductRepository.getTotalRecords);\n\n        case 11:\n          _result = _context2.sent;\n          _context2.next = 14;\n          return put(getTotalProductsSuccess(_result));\n\n        case 14:\n          _context2.next = 19;\n          break;\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 16]]);\n}\n\nfunction getBrands() {\n  var result, _result2;\n\n  return _regeneratorRuntime.wrap(function getBrands$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n\n          if (!(isStaticData === false)) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 4;\n          return call(ProductRepository.getBrands);\n\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return put(getBrandsSuccess(result));\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.next = 11;\n          return call(StaticProductRepository.getBrands);\n\n        case 11:\n          _result2 = _context3.sent;\n          _context3.next = 14;\n          return put(getBrandsSuccess(_result2));\n\n        case 14:\n          _context3.next = 19;\n          break;\n\n        case 16:\n          _context3.prev = 16;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 16]]);\n}\n\nfunction getProductCategories() {\n  var result, _result3;\n\n  return _regeneratorRuntime.wrap(function getProductCategories$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n\n          if (!(isStaticData === false)) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 4;\n          return call(ProductRepository.getProductCategories);\n\n        case 4:\n          result = _context4.sent;\n          _context4.next = 7;\n          return put(getProductCategoriesSuccess(result));\n\n        case 7:\n          _context4.next = 14;\n          break;\n\n        case 9:\n          _context4.next = 11;\n          return call(StaticProductRepository.getProductCategories);\n\n        case 11:\n          _result3 = _context4.sent;\n          _context4.next = 14;\n          return put(getProductCategoriesSuccess(_result3));\n\n        case 14:\n          _context4.next = 19;\n          break;\n\n        case 16:\n          _context4.prev = 16;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 19:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 16]]);\n}\n\nfunction getProductById(_ref2) {\n  var id, product, _product;\n\n  return _regeneratorRuntime.wrap(function getProductById$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref2.id;\n          _context5.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context5.next = 10;\n            break;\n          }\n\n          _context5.next = 5;\n          return call(ProductRepository.getProductsById, id);\n\n        case 5:\n          product = _context5.sent;\n          _context5.next = 8;\n          return put(getSingleProductsSuccess(product));\n\n        case 8:\n          _context5.next = 15;\n          break;\n\n        case 10:\n          _context5.next = 12;\n          return call(StaticProductRepository.getProductsById, id);\n\n        case 12:\n          _product = _context5.sent;\n          _context5.next = 15;\n          return put(getSingleProductsSuccess(_product));\n\n        case 15:\n          _context5.next = 21;\n          break;\n\n        case 17:\n          _context5.prev = 17;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 21;\n          return put(getProductsError(_context5.t0));\n\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 17]]);\n}\n\nfunction getProductByCategory(_ref3) {\n  var category, result, _result4;\n\n  return _regeneratorRuntime.wrap(function getProductByCategory$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          category = _ref3.category;\n          _context6.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context6.next = 12;\n            break;\n          }\n\n          _context6.next = 5;\n          return call(ProductRepository.getProductsByCategory, category);\n\n        case 5:\n          result = _context6.sent;\n          _context6.next = 8;\n          return put(getProductsSuccess(result));\n\n        case 8:\n          _context6.next = 10;\n          return put(getTotalProductsSuccess(result.length));\n\n        case 10:\n          _context6.next = 19;\n          break;\n\n        case 12:\n          _context6.next = 14;\n          return call(StaticProductRepository.getProductsByCategory, category);\n\n        case 14:\n          _result4 = _context6.sent;\n          _context6.next = 17;\n          return put(getProductsSuccess(_result4));\n\n        case 17:\n          _context6.next = 19;\n          return put(getTotalProductsSuccess(_result4.length));\n\n        case 19:\n          _context6.next = 25;\n          break;\n\n        case 21:\n          _context6.prev = 21;\n          _context6.t0 = _context6[\"catch\"](1);\n          _context6.next = 25;\n          return put(getProductsError(_context6.t0));\n\n        case 25:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 21]]);\n}\n\nfunction getProductByPriceRange(_ref4) {\n  var payload, products, _products;\n\n  return _regeneratorRuntime.wrap(function getProductByPriceRange$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context7.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context7.next = 12;\n            break;\n          }\n\n          _context7.next = 5;\n          return call(ProductRepository.getProductsByPriceRange, payload);\n\n        case 5:\n          products = _context7.sent;\n          _context7.next = 8;\n          return put(getProductsSuccess(products));\n\n        case 8:\n          _context7.next = 10;\n          return put(getTotalProductsSuccess(products.length));\n\n        case 10:\n          _context7.next = 19;\n          break;\n\n        case 12:\n          _context7.next = 14;\n          return call(StaticProductRepository.getProductsByPriceRange, payload);\n\n        case 14:\n          _products = _context7.sent;\n          _context7.next = 17;\n          return put(getProductsSuccess(_products));\n\n        case 17:\n          _context7.next = 19;\n          return put(getTotalProductsSuccess(_products.length));\n\n        case 19:\n          _context7.next = 25;\n          break;\n\n        case 21:\n          _context7.prev = 21;\n          _context7.t0 = _context7[\"catch\"](1);\n          _context7.next = 25;\n          return put(getProductsError(_context7.t0));\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[1, 21]]);\n}\n\nfunction getProductByBrand(_ref5) {\n  var payload, brands, products, _brands, _products2;\n\n  return _regeneratorRuntime.wrap(function getProductByBrand$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context8.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context8.next = 14;\n            break;\n          }\n\n          _context8.next = 5;\n          return call(ProductRepository.getProductsByBrands, payload);\n\n        case 5:\n          brands = _context8.sent;\n          products = [];\n          brands.forEach(function (brand) {\n            brand.products.forEach(function (product) {\n              products.push(product);\n            });\n          });\n          _context8.next = 10;\n          return put(getProductsSuccess(products));\n\n        case 10:\n          _context8.next = 12;\n          return put(getTotalProductsSuccess(products.length));\n\n        case 12:\n          _context8.next = 23;\n          break;\n\n        case 14:\n          _context8.next = 16;\n          return call(StaticProductRepository.getProductsByBrands, payload);\n\n        case 16:\n          _brands = _context8.sent;\n          _products2 = [];\n\n          _brands.forEach(function (brand) {\n            brand.products.forEach(function (product) {\n              _products2.push(product);\n            });\n          });\n\n          _context8.next = 21;\n          return put(getProductsSuccess(_products2));\n\n        case 21:\n          _context8.next = 23;\n          return put(getTotalProductsSuccess(_products2.length));\n\n        case 23:\n          _context8.next = 29;\n          break;\n\n        case 25:\n          _context8.prev = 25;\n          _context8.t0 = _context8[\"catch\"](1);\n          _context8.next = 29;\n          return put(getProductsError(_context8.t0));\n\n        case 29:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[1, 25]]);\n}\n\nfunction getProductByKeyword(_ref6) {\n  var keyword, searchParams, result, _result5;\n\n  return _regeneratorRuntime.wrap(function getProductByKeyword$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          keyword = _ref6.keyword;\n          _context9.prev = 1;\n\n          if (!(isStaticData === false)) {\n            _context9.next = 11;\n            break;\n          }\n\n          searchParams = {\n            title_contains: keyword\n          };\n          _context9.next = 6;\n          return call(ProductRepository.getRecords, searchParams);\n\n        case 6:\n          result = _context9.sent;\n          _context9.next = 9;\n          return put(getProductByKeywordsSuccess(result));\n\n        case 9:\n          _context9.next = 16;\n          break;\n\n        case 11:\n          _context9.next = 13;\n          return call(StaticProductRepository.getProductsByKeyword, keyword);\n\n        case 13:\n          _result5 = _context9.sent;\n          _context9.next = 16;\n          return put(getProductByKeywordsSuccess(_result5));\n\n        case 16:\n          _context9.next = 22;\n          break;\n\n        case 18:\n          _context9.prev = 18;\n          _context9.t0 = _context9[\"catch\"](1);\n          _context9.next = 22;\n          return put(getProductsError(_context9.t0));\n\n        case 22:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[1, 18]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return all([takeEvery(actionTypes.GET_PRODUCTS, getProducts)]);\n\n        case 2:\n          _context10.next = 4;\n          return all([takeEvery(actionTypes.GET_TOTAL_OF_PRODUCTS, getTotalOfProducts)]);\n\n        case 4:\n          _context10.next = 6;\n          return all([takeEvery(actionTypes.GET_BRANDS, getBrands)]);\n\n        case 6:\n          _context10.next = 8;\n          return all([takeEvery(actionTypes.GET_PRODUCT_CATEGORIES, getProductCategories)]);\n\n        case 8:\n          _context10.next = 10;\n          return all([takeEvery(actionTypes.GET_PRODUCTS_BY_CATEGORY, getProductByCategory)]);\n\n        case 10:\n          _context10.next = 12;\n          return all([takeEvery(actionTypes.GET_PRODUCTS_BY_PRICE_RANGE, getProductByPriceRange)]);\n\n        case 12:\n          _context10.next = 14;\n          return all([takeEvery(actionTypes.GET_PRODUCTS_BY_BRAND, getProductByBrand)]);\n\n        case 14:\n          _context10.next = 16;\n          return all([takeEvery(actionTypes.GET_PRODUCTS_BY_KEYWORD, getProductByKeyword)]);\n\n        case 16:\n          _context10.next = 18;\n          return all([takeEvery(actionTypes.GET_PRODUCT_BY_ID, getProductById)]);\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/store/product/saga.js"],"names":["getProducts","getTotalOfProducts","getBrands","getProductCategories","getProductById","getProductByCategory","getProductByPriceRange","getProductByBrand","getProductByKeyword","rootSaga","all","put","takeEvery","call","polyfill","ProductRepository","StaticProductRepository","actionTypes","getProductsError","getProductsSuccess","getSingleProductsSuccess","getTotalProductsSuccess","getProductCategoriesSuccess","getBrandsSuccess","getProductByKeywordsSuccess","isStaticData","payload","getRecords","data","getTotalRecords","result","console","log","id","getProductsById","product","category","getProductsByCategory","length","getProductsByPriceRange","products","getProductsByBrands","brands","forEach","brand","push","keyword","searchParams","title_contains","getProductsByKeyword","GET_PRODUCTS","GET_TOTAL_OF_PRODUCTS","GET_BRANDS","GET_PRODUCT_CATEGORIES","GET_PRODUCTS_BY_CATEGORY","GET_PRODUCTS_BY_PRICE_RANGE","GET_PRODUCTS_BY_BRAND","GET_PRODUCTS_BY_KEYWORD","GET_PRODUCT_BY_ID"],"mappings":"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","sourcesContent":["import { all, put, takeEvery, call } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport ProductRepository from '../../repositories/ProductRepository';\nimport StaticProductRepository from '../../repositories/static/StaticProductRepository';\n\nimport {\n    actionTypes,\n    getProductsError,\n    getProductsSuccess,\n    getSingleProductsSuccess,\n    getTotalProductsSuccess,\n    getProductCategoriesSuccess,\n    getBrandsSuccess, getProductByKeywordsSuccess,\n} from './action';\nimport { isStaticData } from '../../utilities/app-settings';\npolyfill();\n\nfunction* getProducts({ payload }) {\n    try {\n        if (isStaticData === false) {\n            const data = yield call(ProductRepository.getRecords, payload);\n            yield put(getProductsSuccess(data));\n        } else {\n            const data = yield call(StaticProductRepository.getRecords);\n            yield put(getProductsSuccess(data));\n        }\n    } catch (err) {\n        yield put(getProductsError(err));\n    }\n}\n\nfunction* getTotalOfProducts() {\n    try {\n        if (isStaticData === false) {\n            const result = yield call(ProductRepository.getTotalRecords);\n            yield put(getTotalProductsSuccess(result));\n        } else {\n            const result = yield call(StaticProductRepository.getTotalRecords);\n            yield put(getTotalProductsSuccess(result));\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* getBrands() {\n    try {\n        if (isStaticData === false) {\n            const result = yield call(ProductRepository.getBrands);\n            yield put(getBrandsSuccess(result));\n        } else {\n            const result = yield call(StaticProductRepository.getBrands);\n            yield put(getBrandsSuccess(result));\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* getProductCategories() {\n    try {\n        if (isStaticData === false) {\n            const result = yield call(ProductRepository.getProductCategories);\n            yield put(getProductCategoriesSuccess(result));\n        } else {\n            const result = yield call(\n                StaticProductRepository.getProductCategories\n            );\n            yield put(getProductCategoriesSuccess(result));\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* getProductById({ id }) {\n    try {\n        if (isStaticData === false) {\n            const product = yield call(ProductRepository.getProductsById, id);\n            yield put(getSingleProductsSuccess(product));\n        } else {\n            const product = yield call(\n                StaticProductRepository.getProductsById,\n                id\n            );\n            yield put(getSingleProductsSuccess(product));\n        }\n    } catch (err) {\n        yield put(getProductsError(err));\n    }\n}\n\nfunction* getProductByCategory({ category }) {\n    try {\n        if (isStaticData === false) {\n            const result = yield call(\n                ProductRepository.getProductsByCategory,\n                category\n            );\n            yield put(getProductsSuccess(result));\n            yield put(getTotalProductsSuccess(result.length));\n        } else {\n            const result = yield call(\n                StaticProductRepository.getProductsByCategory,\n                category\n            );\n            yield put(getProductsSuccess(result));\n            yield put(getTotalProductsSuccess(result.length));\n        }\n    } catch (err) {\n        yield put(getProductsError(err));\n    }\n}\n\nfunction* getProductByPriceRange({ payload }) {\n    try {\n        if (isStaticData === false) {\n            const products = yield call(\n                ProductRepository.getProductsByPriceRange,\n                payload\n            );\n            yield put(getProductsSuccess(products));\n            yield put(getTotalProductsSuccess(products.length));\n        } else {\n            const products = yield call(\n                StaticProductRepository.getProductsByPriceRange,\n                payload\n            );\n            yield put(getProductsSuccess(products));\n            yield put(getTotalProductsSuccess(products.length));\n        }\n    } catch (err) {\n        yield put(getProductsError(err));\n    }\n}\n\nfunction* getProductByBrand({ payload }) {\n    try {\n        if (isStaticData === false) {\n            const brands = yield call(\n                ProductRepository.getProductsByBrands,\n                payload\n            );\n            const products = [];\n            brands.forEach(brand => {\n                brand.products.forEach(product => {\n                    products.push(product);\n                });\n            });\n            yield put(getProductsSuccess(products));\n            yield put(getTotalProductsSuccess(products.length));\n        } else {\n            const brands = yield call(\n                StaticProductRepository.getProductsByBrands,\n                payload\n            );\n            const products = [];\n            brands.forEach(brand => {\n                brand.products.forEach(product => {\n                    products.push(product);\n                });\n            });\n            yield put(getProductsSuccess(products));\n            yield put(getTotalProductsSuccess(products.length));\n        }\n    } catch (err) {\n        yield put(getProductsError(err));\n    }\n}\n\nfunction* getProductByKeyword({ keyword }) {\n    try {\n        if (isStaticData === false) {\n            const searchParams = {\n                title_contains: keyword,\n            };\n            const result = yield call(\n                ProductRepository.getRecords,\n                searchParams\n            );\n            yield put(getProductByKeywordsSuccess(result));\n        } else {\n            const result = yield call(\n                StaticProductRepository.getProductsByKeyword,\n                keyword\n            );\n            yield put(getProductByKeywordsSuccess(result));\n        }\n    } catch (err) {\n        yield put(getProductsError(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_PRODUCTS, getProducts)]);\n    yield all([\n        takeEvery(actionTypes.GET_TOTAL_OF_PRODUCTS, getTotalOfProducts),\n    ]);\n    yield all([takeEvery(actionTypes.GET_BRANDS, getBrands)]);\n    yield all([\n        takeEvery(actionTypes.GET_PRODUCT_CATEGORIES, getProductCategories),\n    ]);\n    yield all([\n        takeEvery(actionTypes.GET_PRODUCTS_BY_CATEGORY, getProductByCategory),\n    ]);\n    yield all([\n        takeEvery(\n            actionTypes.GET_PRODUCTS_BY_PRICE_RANGE,\n            getProductByPriceRange\n        ),\n    ]);\n    yield all([\n        takeEvery(actionTypes.GET_PRODUCTS_BY_BRAND, getProductByBrand),\n    ]);\n    yield all([\n        takeEvery(actionTypes.GET_PRODUCTS_BY_KEYWORD, getProductByKeyword),\n    ]);\n    yield all([takeEvery(actionTypes.GET_PRODUCT_BY_ID, getProductById)]);\n}\n"]},"metadata":{},"sourceType":"module"}