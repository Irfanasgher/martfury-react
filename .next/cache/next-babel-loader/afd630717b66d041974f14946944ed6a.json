{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getCartSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addItemSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeItemSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(increaseQtySaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(decreaseItemQtySaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(clearCartSaga),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCartError, getCartSuccess, updateCartSuccess, updateCartError } from './action';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nexport var calculateAmount = function calculateAmount(obj) {\n  return Object.values(obj).reduce(function (acc, _ref) {\n    var quantity = _ref.quantity,\n        price = _ref.price;\n    return acc + quantity * price;\n  }, 0).toFixed(2);\n};\n\nfunction getCartSaga() {\n  return _regeneratorRuntime.wrap(function getCartSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(getCartSuccess());\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 9;\n          return put(getCartError(_context.t0));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nfunction addItemSaga(payload) {\n  var product, localCart, currentCart, existItem;\n  return _regeneratorRuntime.wrap(function addItemSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n          currentCart = JSON.parse(localCart);\n          existItem = currentCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (existItem) {\n            existItem.quantity += product.quantity;\n          } else {\n            if (!product.quantity) {\n              product.quantity = 1;\n            }\n\n            currentCart.cartItems.push(product);\n          }\n\n          currentCart.amount = calculateAmount(currentCart.cartItems);\n          currentCart.cartTotal++;\n          _context2.next = 10;\n          return put(updateCartSuccess(currentCart));\n\n        case 10:\n          modalSuccess('success');\n          _context2.next = 17;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 17;\n          return put(getCartError(_context2.t0));\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction removeItemSaga(payload) {\n  var product, localCart, index;\n  return _regeneratorRuntime.wrap(function removeItemSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n          index = localCart.cartItems.indexOf(product);\n          localCart.cartTotal = localCart.cartTotal - product.quantity;\n          localCart.cartItems.splice(index, 1);\n          localCart.amount = calculateAmount(localCart.cartItems);\n\n          if (localCart.cartItems.length === 0) {\n            localCart.cartItems = [];\n            localCart.amount = 0;\n            localCart.cartTotal = 0;\n          }\n\n          _context3.next = 10;\n          return put(updateCartSuccess(localCart));\n\n        case 10:\n          modalWarning('warning');\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 17;\n          return put(getCartError(_context3.t0));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction increaseQtySaga(payload) {\n  var product, localCart, selectedItem;\n  return _regeneratorRuntime.wrap(function increaseQtySaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n          selectedItem = localCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (selectedItem) {\n            selectedItem.quantity++;\n            localCart.cartTotal++;\n            localCart.amount = calculateAmount(localCart.cartItems);\n          }\n\n          _context4.next = 7;\n          return put(updateCartSuccess(localCart));\n\n        case 7:\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put(getCartError(_context4.t0));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 9]]);\n}\n\nfunction decreaseItemQtySaga(payload) {\n  var product, localCart, selectedItem;\n  return _regeneratorRuntime.wrap(function decreaseItemQtySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          product = payload.product;\n          localCart = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).cart);\n          selectedItem = localCart.cartItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (selectedItem) {\n            selectedItem.quantity--;\n            localCart.cartTotal--;\n            localCart.amount = calculateAmount(localCart.cartItems);\n          }\n\n          _context5.next = 7;\n          return put(updateCartSuccess(localCart));\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put(getCartError(_context5.t0));\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfunction clearCartSaga() {\n  var emptyCart;\n  return _regeneratorRuntime.wrap(function clearCartSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          emptyCart = {\n            cartItems: [],\n            amount: 0,\n            cartTotal: 0\n          };\n          _context6.next = 4;\n          return put(updateCartSuccess(emptyCart));\n\n        case 4:\n          _context6.next = 10;\n          break;\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 10;\n          return put(updateCartError(_context6.t0));\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n\n        case 2:\n          _context7.next = 4;\n          return all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n\n        case 4:\n          _context7.next = 6;\n          return all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n\n        case 6:\n          _context7.next = 8;\n          return all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n\n        case 8:\n          _context7.next = 10;\n          return all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n\n        case 10:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":null,"metadata":{},"sourceType":"module"}