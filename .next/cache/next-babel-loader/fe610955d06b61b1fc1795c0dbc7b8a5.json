{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPostsSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getFeaturedPostSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getRecentPostSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPostCategories),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport blogGrid from '../../public/static/data/blog-grid';\nimport { actionTypes, getPostsSuccess, getFeaturedPostSuccess, getPostCategoriesSuccess, getRecentPostsSuccess, getPostsError, getRecentPostsError, getFeaturedPostError, getPostCategoriesError } from './action';\npolyfill();\n\nfunction getPostsSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function getPostsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          data = blogGrid.posts;\n          _context.next = 4;\n          return put(getPostsSuccess(data));\n\n        case 4:\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 10;\n          return put(getPostsError(_context.t0));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction getFeaturedPostSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function getFeaturedPostSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          data = blogGrid.postFeatures;\n          _context2.next = 4;\n          return put(getFeaturedPostSuccess(data));\n\n        case 4:\n          _context2.next = 10;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 10;\n          return put(getFeaturedPostError(_context2.t0));\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nfunction getRecentPostSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function getRecentPostSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          data = blogGrid.recentPosts;\n          _context3.next = 4;\n          return put(getRecentPostsSuccess(data));\n\n        case 4:\n          _context3.next = 10;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 10;\n          return put(getRecentPostsError(_context3.t0));\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6]]);\n}\n\nfunction getPostCategories() {\n  var data;\n  return _regeneratorRuntime.wrap(function getPostCategories$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          data = blogGrid.blogCategories;\n          _context4.next = 4;\n          return put(getPostCategoriesSuccess(data));\n\n        case 4:\n          _context4.next = 10;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 10;\n          return put(getPostCategoriesError(_context4.t0));\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actionTypes.GET_POSTS, getPostsSaga), takeEvery(actionTypes.GET_FEATURED_POST, getFeaturedPostSaga), takeEvery(actionTypes.GET_RECENT_POSTS, getRecentPostSaga), takeEvery(actionTypes.GET_POST_CATEGORIES, getPostCategories)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/chc-ui/store/post/saga.js"],"names":["getPostsSaga","getFeaturedPostSaga","getRecentPostSaga","getPostCategories","rootSaga","all","put","takeLatest","takeEvery","polyfill","blogGrid","actionTypes","getPostsSuccess","getFeaturedPostSuccess","getPostCategoriesSuccess","getRecentPostsSuccess","getPostsError","getRecentPostsError","getFeaturedPostError","getPostCategoriesError","data","posts","postFeatures","recentPosts","blogCategories","GET_POSTS","GET_FEATURED_POST","GET_RECENT_POSTS","GET_POST_CATEGORIES"],"mappings":";;;;yBAmBUA,Y;;;yBASAC,mB;;;yBAQAC,iB;;;yBASAC,iB;;;yBASeC,Q;;AAtDzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,QAAP,MAAqB,oCAArB;AAEA,SACIC,WADJ,EAEIC,eAFJ,EAGIC,sBAHJ,EAIIC,wBAJJ,EAKIC,qBALJ,EAMIC,aANJ,EAOIC,mBAPJ,EAQIC,oBARJ,EASIC,sBATJ,QAUO,UAVP;AAYAV,QAAQ;;AAER,SAAUT,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEcoB,UAAAA,IAFd,GAEqBV,QAAQ,CAACW,KAF9B;AAAA;AAGQ,iBAAMf,GAAG,CAACM,eAAe,CAACQ,IAAD,CAAhB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMd,GAAG,CAACU,aAAa,aAAd,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUf,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEcmB,UAAAA,IAFd,GAEqBV,QAAQ,CAACY,YAF9B;AAAA;AAGQ,iBAAMhB,GAAG,CAACO,sBAAsB,CAACO,IAAD,CAAvB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMd,GAAG,CAACY,oBAAoB,cAArB,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAUhB,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEckB,UAAAA,IAFd,GAEqBV,QAAQ,CAACa,WAF9B;AAAA;AAGQ,iBAAMjB,GAAG,CAACS,qBAAqB,CAACK,IAAD,CAAtB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMd,GAAG,CAACW,mBAAmB,cAApB,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUd,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEciB,UAAAA,IAFd,GAEqBV,QAAQ,CAACc,cAF9B;AAAA;AAGQ,iBAAMlB,GAAG,CAACQ,wBAAwB,CAACM,IAAD,CAAzB,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMd,GAAG,CAACa,sBAAsB,cAAvB,CAAT;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUf,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNG,SAAS,CAACG,WAAW,CAACc,SAAb,EAAwBzB,YAAxB,CADH,EAENQ,SAAS,CAACG,WAAW,CAACe,iBAAb,EAAgCzB,mBAAhC,CAFH,EAGNO,SAAS,CAACG,WAAW,CAACgB,gBAAb,EAA+BzB,iBAA/B,CAHH,EAINM,SAAS,CAACG,WAAW,CAACiB,mBAAb,EAAkCzB,iBAAlC,CAJH,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeLatest, takeEvery } from 'redux-saga/effects';\r\nimport { polyfill } from 'es6-promise';\r\n\r\nimport blogGrid from '../../public/static/data/blog-grid';\r\n\r\nimport {\r\n    actionTypes,\r\n    getPostsSuccess,\r\n    getFeaturedPostSuccess,\r\n    getPostCategoriesSuccess,\r\n    getRecentPostsSuccess,\r\n    getPostsError,\r\n    getRecentPostsError,\r\n    getFeaturedPostError,\r\n    getPostCategoriesError,\r\n} from './action';\r\n\r\npolyfill();\r\n\r\nfunction* getPostsSaga() {\r\n    try {\r\n        const data = blogGrid.posts;\r\n        yield put(getPostsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getPostsError(err));\r\n    }\r\n}\r\n\r\nfunction* getFeaturedPostSaga() {\r\n    try {\r\n        const data = blogGrid.postFeatures;\r\n        yield put(getFeaturedPostSuccess(data));\r\n    } catch (err) {\r\n        yield put(getFeaturedPostError(err));\r\n    }\r\n}\r\nfunction* getRecentPostSaga() {\r\n    try {\r\n        const data = blogGrid.recentPosts;\r\n        yield put(getRecentPostsSuccess(data));\r\n    } catch (err) {\r\n        yield put(getRecentPostsError(err));\r\n    }\r\n}\r\n\r\nfunction* getPostCategories() {\r\n    try {\r\n        const data = blogGrid.blogCategories;\r\n        yield put(getPostCategoriesSuccess(data));\r\n    } catch (err) {\r\n        yield put(getPostCategoriesError(err));\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        takeEvery(actionTypes.GET_POSTS, getPostsSaga),\r\n        takeEvery(actionTypes.GET_FEATURED_POST, getFeaturedPostSaga),\r\n        takeEvery(actionTypes.GET_RECENT_POSTS, getRecentPostSaga),\r\n        takeEvery(actionTypes.GET_POST_CATEGORIES, getPostCategories),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}