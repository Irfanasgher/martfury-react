{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { Slider, Checkbox } from 'antd';\nimport { getProducts, getTotalProducts, getProductsByPrice, getBrands, getProductsByBrand, getProductCategories, getProductsByCategory } from '../../../../store/product/action';\n\nclass ShopWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      priceMin: 0,\n      priceMax: 2000\n    };\n  }\n\n  handleChangeRange(value) {\n    this.setState({\n      priceMin: value[0],\n      priceMax: value[1]\n    });\n    const params = {\n      price_gt: value[0],\n      price_lt: value[1],\n      _start: 1,\n      _limit: 999\n    };\n    this.props.dispatch(getProductsByPrice(params));\n  }\n\n  handleFilterByBrand(value) {\n    if (value.length > 0) {\n      this.props.dispatch(getProductsByBrand(value));\n      Router.push({\n        pathname: '/shop',\n        query: {\n          brand: value\n        }\n      });\n    } else {\n      const params = {\n        _start: 1,\n        _limit: 12\n      };\n      this.props.dispatch(getProducts(params));\n      this.props.dispatch(getTotalProducts());\n    }\n  }\n\n  handleFilterProductsByCategory(e, slug) {\n    e.preventDefault();\n\n    if (slug !== null) {\n      Router.push({\n        pathname: '/shop',\n        query: {\n          category: slug\n        }\n      });\n      this.props.dispatch(getProductsByCategory(slug));\n    } else {\n      const params = {\n        _start: 1,\n        _limit: 12\n      };\n      this.props.dispatch(getProducts(params));\n      this.props.dispatch(getTotalProducts());\n    }\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getBrands());\n    this.props.dispatch(getProductCategories());\n  }\n\n  render() {\n    const {\n      brands,\n      categories\n    } = this.props;\n    const brandsGroup = [];\n\n    if (brands.length > 0) {\n      brands.forEach(brand => {\n        brandsGroup.push({\n          id: brand.id,\n          value: brand.id,\n          label: brand.name\n        });\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"ps-layout__left\"\n    }, __jsx(\"aside\", {\n      className: \"widget widget_shop\"\n    }, __jsx(\"h4\", {\n      className: \"widget-title\"\n    }, \"Categories\"), categories && categories.length > 0 ? __jsx(\"ul\", {\n      className: \"ps-list--categories\"\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"/shop\",\n      onClick: e => this.handleFilterProductsByCategory(e, null)\n    }, \"All\")), categories.map(category => __jsx(\"li\", {\n      key: category.id\n    }, __jsx(\"a\", {\n      href: `shop?category=${category.slug}`,\n      onClick: e => this.handleFilterProductsByCategory(e, category.slug)\n    }, category.name)))) : 'No Category'), __jsx(\"aside\", {\n      className: \"widget widget_shop\"\n    }, __jsx(\"h4\", {\n      className: \"widget-title\"\n    }, \"By Brands\"), __jsx(\"figure\", null, __jsx(Checkbox.Group, {\n      options: brandsGroup,\n      onChange: this.handleFilterByBrand.bind(this)\n    })), __jsx(\"figure\", null, __jsx(\"h4\", {\n      className: \"widget-title\"\n    }, \"By Price\"), __jsx(Slider, {\n      range: true,\n      defaultValue: [0, 2000],\n      max: 2000,\n      onAfterChange: this.handleChangeRange.bind(this)\n    }), __jsx(\"p\", null, \"Price: $\", this.state.priceMin, \" - $\", this.state.priceMax))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.product;\n};\n\nexport default connect(mapStateToProps)(ShopWidget);","map":null,"metadata":{},"sourceType":"module"}