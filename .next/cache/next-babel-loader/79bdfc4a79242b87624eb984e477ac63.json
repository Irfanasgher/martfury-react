{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCompareListSuccess, updateCompareListSuccess, addItemSuccess } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Added to compare list!',\n    description: 'This product has been added to compare list!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Removed to compare list',\n    description: 'This product has been removed from compare list!'\n  });\n};\n\nfunction* getCompareListSaga() {\n  try {\n    const localCompareList = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n    yield put(getCompareListSuccess(localCompareList));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* addItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCompare = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).compare);\n    let existItem = localCompare.compareItems.find(item => item.id === product.id);\n\n    if (!existItem) {\n      product.quantity = 1;\n      localCompare.compareItems.push(product);\n      localCompare.compareTotal++;\n      yield put(updateCompareListSuccess(localCompare));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* removeItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCompare = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).compare);\n    let index = localCompare.compareItems.indexOf(product);\n    localCompare.compareTotal = localCompare.compareTotal - 1;\n    localCompare.compareItems.splice(index, 1);\n    yield put(updateCompareListSuccess(localCompare));\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* clearCompareListSaga() {\n  try {\n    const emptyCart = {\n      compareItems: [],\n      compareTotal: 0\n    };\n    yield put(updateCompareListSuccess(emptyCart));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_COMPARE_LIST, getCompareListSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM_COMPARE, addItemSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM_COMPARE, removeItemSaga)]);\n}","map":{"version":3,"sources":["C:/chc-ui/store/compare/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","getCompareListSuccess","updateCompareListSuccess","addItemSuccess","modalSuccess","type","message","description","modalWarning","getCompareListSaga","localCompareList","JSON","parse","localStorage","getItem","cart","err","console","log","addItemSaga","payload","product","localCompare","compare","existItem","compareItems","find","item","id","quantity","push","compareTotal","removeItemSaga","index","indexOf","splice","clearCompareListSaga","emptyCart","rootSaga","GET_COMPARE_LIST","ADD_ITEM_COMPARE","REMOVE_ITEM_COMPARE"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\nimport {\r\n    actionTypes,\r\n    getCompareListSuccess,\r\n    updateCompareListSuccess,\r\n    addItemSuccess,\r\n} from './action';\r\n\r\nconst modalSuccess = type => {\r\n    notification[type]({\r\n        message: 'Added to compare list!',\r\n        description: 'This product has been added to compare list!',\r\n    });\r\n};\r\n\r\nconst modalWarning = type => {\r\n    notification[type]({\r\n        message: 'Removed to compare list',\r\n        description: 'This product has been removed from compare list!',\r\n    });\r\n};\r\n\r\nfunction* getCompareListSaga() {\r\n    try {\r\n        const localCompareList = JSON.parse(\r\n            localStorage.getItem('persist:martfury')\r\n        ).cart;\r\n        yield put(getCompareListSuccess(localCompareList));\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* addItemSaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        let localCompare = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).compare\r\n        );\r\n\r\n        let existItem = localCompare.compareItems.find(\r\n            item => item.id === product.id\r\n        );\r\n\r\n        if (!existItem) {\r\n            product.quantity = 1;\r\n            localCompare.compareItems.push(product);\r\n            localCompare.compareTotal++;\r\n            yield put(updateCompareListSuccess(localCompare));\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* removeItemSaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        let localCompare = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).compare\r\n        );\r\n        let index = localCompare.compareItems.indexOf(product);\r\n        localCompare.compareTotal = localCompare.compareTotal - 1;\r\n        localCompare.compareItems.splice(index, 1);\r\n        yield put(updateCompareListSuccess(localCompare));\r\n        modalWarning('warning');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* clearCompareListSaga() {\r\n    try {\r\n        const emptyCart = {\r\n            compareItems: [],\r\n            compareTotal: 0,\r\n        };\r\n        yield put(updateCompareListSuccess(emptyCart));\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_COMPARE_LIST, getCompareListSaga)]);\r\n    yield all([takeEvery(actionTypes.ADD_ITEM_COMPARE, addItemSaga)]);\r\n    yield all([takeEvery(actionTypes.REMOVE_ITEM_COMPARE, removeItemSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}