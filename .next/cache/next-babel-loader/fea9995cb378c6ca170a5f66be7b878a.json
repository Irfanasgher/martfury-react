{"ast":null,"code":"import { all, put, call, takeEvery } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport { actionTypes, getCategoriesSuccess, getCollectionsSuccess } from './action';\nimport { isStaticData } from '../../utilities/app-settings';\nimport CollectionRepository from '../../repositories/CollectionRepository';\nimport StaticCollectionRepository from '../../repositories/static/StaticCollectionRepository';\npolyfill();\n\nfunction* getCollections({\n  payload\n}) {\n  try {\n    if (isStaticData === false) {\n      const data = yield call(CollectionRepository.getCollections, payload);\n      yield put(getCollectionsSuccess(data));\n    } else {\n      const data = yield call(StaticCollectionRepository.getCollections, payload);\n      yield put(getCollectionsSuccess(data));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getCollectionByCategories({\n  payload\n}) {\n  try {\n    if (isStaticData === false) {\n      const data = yield call(CollectionRepository.getCategoriesBySlug, payload);\n      yield put(getCategoriesSuccess(data));\n    } else {\n      const data = yield call(StaticCollectionRepository.getCollections, payload);\n      yield put(getCollectionsSuccess(data));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_COLLECTIONS, getCollections)]);\n  yield all([takeEvery(actionTypes.GET_CATEGORIES, getCollectionByCategories)]);\n}","map":null,"metadata":{},"sourceType":"module"}