{"ast":null,"code":"var _jsxFileName = \"C:\\\\chc-ui\\\\components\\\\elements\\\\detail\\\\modules\\\\thumbnail\\\\ThumbnailDefault.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport NextArrow from '../../../carousel/NextArrow';\nimport PrevArrow from '../../../carousel/PrevArrow';\nimport Lightbox from 'react-image-lightbox';\nimport { baseUrl } from '../../../../../repositories/Repository';\nimport { isStaticData } from '../../../../../utilities/app-settings';\nimport ThumbnailImage from '../elements/ThumbnailImage';\n\nclass ThumbnailDefault extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOpenLightbox\", (e, imageIndex) => {\n      e.preventDefault();\n      this.setState({\n        photoIndex: imageIndex,\n        isOpen: true\n      });\n    });\n\n    this.state = {\n      galleryCarousel: null,\n      variantCarousel: null,\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      galleryCarousel: this.slider1,\n      variantCarousel: this.slider2\n    });\n  }\n\n  render() {\n    const gallerySetting = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      nextArrow: __jsx(NextArrow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      prevArrow: __jsx(PrevArrow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })\n    };\n    const variantSetting = {\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          dots: false,\n          arrows: false,\n          vertical: false,\n          infinite: false\n        }\n      }, {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 4,\n          dots: false,\n          arrows: false,\n          vertical: false,\n          infinite: false\n        }\n      }, {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 4,\n          dots: false,\n          arrows: false,\n          vertical: false,\n          infinite: false\n        }\n      }]\n    };\n    const {\n      product\n    } = this.props;\n    const {\n      photoIndex,\n      isOpen\n    } = this.state;\n    const productImages = [];\n    product.images.map(variant => {\n      if (isStaticData === false) {\n        productImages.push(`${baseUrl}${variant.url}`);\n      } else {\n        productImages.push(variant.url);\n      }\n    });\n    return __jsx(\"div\", {\n      className: \"ps-product__thumbnail\",\n      \"data-vertical\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"figure\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"ps-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(Slider, _extends({}, gallerySetting, {\n      ref: slider => this.slider1 = slider,\n      asNavFor: this.state.variantCarousel,\n      className: \"ps-product__gallery ps-carousel inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), product.images.map((variant, index) => __jsx(\"div\", {\n      className: \"item\",\n      key: variant.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: e => this.handleOpenLightbox(e, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(ThumbnailImage, {\n      url: variant.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))))))), __jsx(Slider, _extends({\n      asNavFor: this.state.galleryCarousel,\n      ref: slider => this.slider2 = slider,\n      swipeToSlide: true,\n      arrows: false,\n      slidesToShow: 3,\n      vertical: true,\n      focusOnSelect: true\n    }, variantSetting, {\n      className: \"ps-product__variants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), product.images.map(variant => __jsx(\"div\", {\n      className: \"item\",\n      key: variant.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(ThumbnailImage, {\n      url: variant.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))), isOpen && __jsx(Lightbox, {\n      mainSrc: productImages[photoIndex],\n      nextSrc: productImages[(photoIndex + 1) % productImages.length],\n      prevSrc: productImages[(photoIndex + productImages.length - 1) % productImages.length],\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + productImages.length - 1) % productImages.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % productImages.length\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ThumbnailDefault;","map":{"version":3,"sources":["C:/chc-ui/components/elements/detail/modules/thumbnail/ThumbnailDefault.jsx"],"names":["React","Component","Slider","NextArrow","PrevArrow","Lightbox","baseUrl","isStaticData","ThumbnailImage","ThumbnailDefault","constructor","props","e","imageIndex","preventDefault","setState","photoIndex","isOpen","state","galleryCarousel","variantCarousel","componentDidMount","slider1","slider2","render","gallerySetting","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","variantSetting","responsive","breakpoint","settings","arrows","vertical","product","productImages","images","map","variant","push","url","slider","index","id","handleOpenLightbox","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Slider from 'react-slick';\r\nimport NextArrow from '../../../carousel/NextArrow';\r\nimport PrevArrow from '../../../carousel/PrevArrow';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport { baseUrl } from '../../../../../repositories/Repository';\r\nimport { isStaticData } from '../../../../../utilities/app-settings';\r\nimport ThumbnailImage from '../elements/ThumbnailImage';\r\nclass ThumbnailDefault extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            galleryCarousel: null,\r\n            variantCarousel: null,\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n        };\r\n    }\r\n\r\n    handleOpenLightbox = (e, imageIndex) => {\r\n        e.preventDefault();\r\n        this.setState({ photoIndex: imageIndex, isOpen: true });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            galleryCarousel: this.slider1,\r\n            variantCarousel: this.slider2,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const gallerySetting = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            nextArrow: <NextArrow />,\r\n            prevArrow: <PrevArrow />,\r\n        };\r\n\r\n        const variantSetting = {\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        dots: false,\r\n                        arrows: false,\r\n                        vertical: false,\r\n                        infinite: false,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 768,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        dots: false,\r\n                        arrows: false,\r\n                        vertical: false,\r\n                        infinite: false,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        dots: false,\r\n                        arrows: false,\r\n                        vertical: false,\r\n                        infinite: false,\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const { product } = this.props;\r\n        const { photoIndex, isOpen } = this.state;\r\n        const productImages = [];\r\n        product.images.map(variant => {\r\n            if (isStaticData === false) {\r\n                productImages.push(`${baseUrl}${variant.url}`);\r\n            }\r\n            else {\r\n                productImages.push(variant.url);\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className=\"ps-product__thumbnail\" data-vertical=\"true\">\r\n                <figure>\r\n                    <div className=\"ps-wrapper\">\r\n                        <Slider\r\n                            {...gallerySetting}\r\n                            ref={slider => (this.slider1 = slider)}\r\n                            asNavFor={this.state.variantCarousel}\r\n                            className=\"ps-product__gallery ps-carousel inside\">\r\n                            {product.images.map((variant, index) => (\r\n                                <div className=\"item\" key={variant.id}>\r\n                                    <a\r\n                                        href=\"#\"\r\n                                        onClick={e =>\r\n                                            this.handleOpenLightbox(e, index)\r\n                                        }>\r\n                                        <ThumbnailImage url={variant.url} />\r\n                                    </a>\r\n                                </div>\r\n                            ))}\r\n                        </Slider>\r\n                    </div>\r\n                </figure>\r\n                <Slider\r\n                    asNavFor={this.state.galleryCarousel}\r\n                    ref={slider => (this.slider2 = slider)}\r\n                    swipeToSlide={true}\r\n                    arrows={false}\r\n                    slidesToShow={3}\r\n                    vertical={true}\r\n                    focusOnSelect={true}\r\n                    {...variantSetting}\r\n                    className=\"ps-product__variants\">\r\n                    {product.images.map(variant => (\r\n                        <div className=\"item\" key={variant.id}>\r\n                            <ThumbnailImage url={variant.url} />\r\n                        </div>\r\n                    ))}\r\n                </Slider>\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={productImages[photoIndex]}\r\n                        nextSrc={\r\n                            productImages[\r\n                                (photoIndex + 1) % productImages.length\r\n                            ]\r\n                        }\r\n                        prevSrc={\r\n                            productImages[\r\n                                (photoIndex + productImages.length - 1) %\r\n                                    productImages.length\r\n                            ]\r\n                        }\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                        onMovePrevRequest={() =>\r\n                            this.setState({\r\n                                photoIndex:\r\n                                    (photoIndex + productImages.length - 1) %\r\n                                    productImages.length,\r\n                            })\r\n                        }\r\n                        onMoveNextRequest={() =>\r\n                            this.setState({\r\n                                photoIndex:\r\n                                    (photoIndex + 1) % productImages.length,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThumbnailDefault;\r\n"]},"metadata":{},"sourceType":"module"}