{"ast":null,"code":"var _jsxFileName = \"G:\\\\the-hexaa\\\\ReactJS\\\\martfury_react_package_1_3\\\\martfury-react-1_3\\\\components\\\\elements\\\\menu\\\\Menu.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport MegaMenu from './MegaMenu';\nimport MenuDropdown from './MenuDropdown';\n\nconst Menu = ({\n  data,\n  className\n}) => __jsx(\"ul\", {\n  className: className,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, data && data.map(item => {\n  if (item.subMenu) {\n    return __jsx(MenuDropdown, {\n      menuData: item,\n      key: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  } else if (item.megaContent) {\n    return __jsx(MegaMenu, {\n      menuData: item,\n      key: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  } else {\n    return __jsx(\"li\", {\n      key: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, item.type === 'dynamic' ? __jsx(Link, {\n      href: `${item.url}/[pid]`,\n      as: `${item.url}/${item.endPoint}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, item.text)) : __jsx(Link, {\n      href: item.url,\n      as: item.alias,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, item.text)));\n  }\n}));\n\nexport default Menu;","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/components/elements/menu/Menu.jsx"],"names":["React","Link","MegaMenu","MenuDropdown","Menu","data","className","map","item","subMenu","text","megaContent","type","url","endPoint","alias"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACT;AAAI,EAAA,SAAS,EAAEA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,IAAI,IACDA,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AACb,MAAIA,IAAI,CAACC,OAAT,EAAkB;AACd,WAAO,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,IAAxB;AAA8B,MAAA,GAAG,EAAEA,IAAI,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAIF,IAAI,CAACG,WAAT,EAAsB;AACzB,WAAO,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,IAApB;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFM,MAEA;AACH,WACI;AAAI,MAAA,GAAG,EAAEF,IAAI,CAACE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACI,IAAL,KAAc,SAAd,GACG,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,GAAEJ,IAAI,CAACK,GAAI,QAAxB;AAAiC,MAAA,EAAE,EAAG,GAAEL,IAAI,CAACK,GAAI,IAAGL,IAAI,CAACM,QAAS,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,IAAI,CAACE,IAAT,CADJ,CADH,GAKG,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAI,CAACK,GAAjB;AAAsB,MAAA,EAAE,EAAEL,IAAI,CAACO,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,IAAI,CAACE,IAAT,CADJ,CANR,CADJ;AAaH;AACJ,CApBD,CAFR,CADJ;;AA2BA,eAAeN,IAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\n\nimport MegaMenu from './MegaMenu';\nimport MenuDropdown from './MenuDropdown';\n\nconst Menu = ({ data, className }) => (\n    <ul className={className}>\n        {data &&\n            data.map(item => {\n                if (item.subMenu) {\n                    return <MenuDropdown menuData={item} key={item.text} />;\n                } else if (item.megaContent) {\n                    return <MegaMenu menuData={item} key={item.text} />;\n                } else {\n                    return (\n                        <li key={item.text}>\n                            {item.type === 'dynamic' ? (\n                                <Link href={`${item.url}/[pid]`} as={`${item.url}/${item.endPoint}`}>\n                                    <a>{item.text}</a>\n                                </Link>\n                            ) : (\n                                <Link href={item.url} as={item.alias}>\n                                    <a>{item.text}</a>\n                                </Link>\n                            )}\n                        </li>\n                    );\n                }\n            })}\n    </ul>\n);\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}