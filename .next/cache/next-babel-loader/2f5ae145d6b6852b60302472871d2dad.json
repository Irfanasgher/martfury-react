{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getWishlistListSuccess, updateWishlistListSuccess } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Added to wishlisht!',\n    description: 'This product has been added to wishlist!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Removed from wishlist',\n    description: 'This product has been removed from wishlist!'\n  });\n};\n\nfunction* getWishlistListSaga() {\n  try {\n    const localWishlistList = JSON.parse(localStorage.getItem('persist:martfury')).wishlist;\n    yield put(getWishlistListSuccess(localWishlistList));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* addItemToWishlistSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localWishlist = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).wishlist);\n    let existItem = localWishlist.wishlistItems.find(item => item.id === product.id);\n\n    if (!existItem) {\n      localWishlist.wishlistItems.push(product);\n      localWishlist.wishlistTotal++;\n      yield put(updateWishlistListSuccess(localWishlist));\n      modalSuccess('success');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* removeItemWishlistSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localWishlist = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).wishlist);\n    let index = localWishlist.wishlistItems.indexOf(product);\n    localWishlist.wishlistTotal = localWishlist.wishlistTotal - 1;\n    localWishlist.wishlistItems.splice(index, 1);\n    yield put(updateWishlistListSuccess(localWishlist));\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* clearWishlistListSaga() {\n  try {\n    const emptyCart = {\n      wishlistItems: [],\n      wishlistTotal: 0\n    };\n    yield put(updateWishlistListSuccess(emptyCart));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_WISHLIST_LIST, getWishlistListSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM_WISHLISH, addItemToWishlistSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM_WISHLISH, removeItemWishlistSaga)]);\n}","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/store/wishlist/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","getWishlistListSuccess","updateWishlistListSuccess","modalSuccess","type","message","description","modalWarning","getWishlistListSaga","localWishlistList","JSON","parse","localStorage","getItem","wishlist","err","console","log","addItemToWishlistSaga","payload","product","localWishlist","existItem","wishlistItems","find","item","id","push","wishlistTotal","removeItemWishlistSaga","index","indexOf","splice","clearWishlistListSaga","emptyCart","rootSaga","GET_WISHLIST_LIST","ADD_ITEM_WISHLISH","REMOVE_ITEM_WISHLISH"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport {\n    actionTypes,\n    getWishlistListSuccess,\n    updateWishlistListSuccess,\n} from './action';\n\nconst modalSuccess = type => {\n    notification[type]({\n        message: 'Added to wishlisht!',\n        description: 'This product has been added to wishlist!',\n    });\n};\n\nconst modalWarning = type => {\n    notification[type]({\n        message: 'Removed from wishlist',\n        description: 'This product has been removed from wishlist!',\n    });\n};\n\nfunction* getWishlistListSaga() {\n    try {\n        const localWishlistList = JSON.parse(\n            localStorage.getItem('persist:martfury')\n        ).wishlist;\n        yield put(getWishlistListSuccess(localWishlistList));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* addItemToWishlistSaga(payload) {\n    try {\n        const { product } = payload;\n        let localWishlist = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).wishlist\n        );\n\n        let existItem = localWishlist.wishlistItems.find(\n            item => item.id === product.id\n        );\n\n        if (!existItem) {\n            localWishlist.wishlistItems.push(product);\n            localWishlist.wishlistTotal++;\n            yield put(updateWishlistListSuccess(localWishlist));\n            modalSuccess('success');\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* removeItemWishlistSaga(payload) {\n    try {\n        const { product } = payload;\n        let localWishlist = JSON.parse(\n            JSON.parse(localStorage.getItem('persist:martfury')).wishlist\n        );\n        let index = localWishlist.wishlistItems.indexOf(product);\n        localWishlist.wishlistTotal = localWishlist.wishlistTotal - 1;\n        localWishlist.wishlistItems.splice(index, 1);\n        yield put(updateWishlistListSuccess(localWishlist));\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* clearWishlistListSaga() {\n    try {\n        const emptyCart = {\n            wishlistItems: [],\n            wishlistTotal: 0,\n        };\n        yield put(updateWishlistListSuccess(emptyCart));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_WISHLIST_LIST, getWishlistListSaga)]);\n    yield all([\n        takeEvery(actionTypes.ADD_ITEM_WISHLISH, addItemToWishlistSaga),\n    ]);\n    yield all([\n        takeEvery(actionTypes.REMOVE_ITEM_WISHLISH, removeItemWishlistSaga),\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}