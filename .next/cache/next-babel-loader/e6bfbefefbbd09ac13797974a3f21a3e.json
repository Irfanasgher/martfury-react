{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCompareListSuccess, updateCompareListSuccess, addItemSuccess } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Added to compare list!',\n    description: 'This product has been added to compare list!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Removed to compare list',\n    description: 'This product has been removed from compare list!'\n  });\n};\n\nfunction* getCompareListSaga() {\n  try {\n    const localCompareList = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n    yield put(getCompareListSuccess(localCompareList));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* addItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCompare = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).compare);\n    let existItem = localCompare.compareItems.find(item => item.id === product.id);\n\n    if (!existItem) {\n      product.quantity = 1;\n      localCompare.compareItems.push(product);\n      localCompare.compareTotal++;\n      yield put(updateCompareListSuccess(localCompare));\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* removeItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localCompare = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).compare);\n    let index = localCompare.compareItems.indexOf(product);\n    localCompare.compareTotal = localCompare.compareTotal - 1;\n    localCompare.compareItems.splice(index, 1);\n    yield put(updateCompareListSuccess(localCompare));\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* clearCompareListSaga() {\n  try {\n    const emptyCart = {\n      compareItems: [],\n      compareTotal: 0\n    };\n    yield put(updateCompareListSuccess(emptyCart));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_COMPARE_LIST, getCompareListSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM_COMPARE, addItemSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM_COMPARE, removeItemSaga)]);\n}","map":null,"metadata":{},"sourceType":"module"}