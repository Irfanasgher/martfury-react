{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Slider from 'react-slick';\nimport Product from '../../../elements/products/Product';\nimport { connect } from 'react-redux';\nimport { carouselStandard } from '../../../../utilities/carousel-helpers';\nimport { getColletionBySlug } from '../../../../utilities/product-helper';\n\nclass AutopartRecommendForYou extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      collections,\n      collectionSlug\n    } = this.props;\n    const products = getColletionBySlug(collections, collectionSlug);\n    return __jsx(\"section\", {\n      className: \"ps-product-list ps-recommend-for-you\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"ps-section__header\"\n    }, __jsx(\"h3\", null, \"RECOMMENDED FOR YOU\"), __jsx(\"ul\", {\n      className: \"ps-section__links\"\n    }, __jsx(\"li\", null, __jsx(Link, {\n      href: \"/shop\"\n    }, __jsx(\"a\", null, \"Best Seller\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/shop\"\n    }, __jsx(\"a\", null, \"New Arrival\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/shop\"\n    }, __jsx(\"a\", null, \"Top Rated\"))), __jsx(\"li\", null, __jsx(Link, {\n      href: \"/shop\"\n    }, __jsx(\"a\", null, \"Trending Products\"))))), __jsx(\"div\", {\n      className: \"ps-section__content\"\n    }, __jsx(Slider, _extends({}, carouselStandard, {\n      className: \"ps-carousel outside\"\n    }), products.map(product => __jsx(Product, {\n      product: product,\n      key: product.id\n    }))))));\n  }\n\n}\n\nexport default connect(state => state.collection)(AutopartRecommendForYou);","map":null,"metadata":{},"sourceType":"module"}