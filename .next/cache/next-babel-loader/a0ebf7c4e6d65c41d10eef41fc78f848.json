{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { getCart, removeItem } from '../../../../store/cart/action';\nimport { isStaticData } from '../../../../utilities/app-settings';\nimport { baseUrl } from '../../../../repositories/Repository';\n\nclass MiniCart extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleRemoveCartItem\", product => {\n      this.props.dispatch(removeItem(product));\n    });\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getCart());\n  }\n\n  render() {\n    const {\n      amount,\n      cartTotal,\n      cartItems\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"ps-cart--mini\"\n    }, __jsx(\"a\", {\n      className: \"header__extra\",\n      href: \"#\"\n    }, __jsx(\"i\", {\n      className: \"icon-bag2\"\n    }), __jsx(\"span\", null, __jsx(\"i\", null, cartTotal ? cartTotal : 0))), cartItems && cartItems.length > 0 ? __jsx(\"div\", {\n      className: \"ps-cart__content\"\n    }, __jsx(\"div\", {\n      className: \"ps-cart__items\"\n    }, cartItems && cartItems.length > 0 ? cartItems.map(product => __jsx(\"div\", {\n      className: \"ps-product--cart-mobile\",\n      key: product.id\n    }, __jsx(\"div\", {\n      className: \"ps-product__thumbnail\"\n    }, __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      src: isStaticData === false ? `${baseUrl}${product.thumbnail.url}` : product.thumbnail.url,\n      alt: \"martfury\"\n    })))), __jsx(\"div\", {\n      className: \"ps-product__content\"\n    }, __jsx(\"a\", {\n      className: \"ps-product__remove\",\n      onClick: this.handleRemoveCartItem.bind(this, product)\n    }, __jsx(\"i\", {\n      className: \"icon-cross\"\n    })), __jsx(Link, {\n      href: \"/product/[pid]\",\n      as: `/product/${product.id}`\n    }, __jsx(\"a\", {\n      className: \"ps-product__title\"\n    }, product.title)), __jsx(\"p\", null, __jsx(\"strong\", null, \"Sold by:\"), ' ', product.vendor), __jsx(\"small\", null, product.quantity, \" x $\", product.price)))) : ''), __jsx(\"div\", {\n      className: \"ps-cart__footer\"\n    }, __jsx(\"h3\", null, \"Sub Total:\", __jsx(\"strong\", null, \"$\", amount ? amount : 0)), __jsx(\"figure\", null, __jsx(Link, {\n      href: \"/account/shopping-cart\",\n      as: \"/cart\"\n    }, __jsx(\"a\", {\n      className: \"ps-btn\",\n      style: {\n        color: 'white'\n      }\n    }, \"View Cart\")), __jsx(Link, {\n      href: \"/account/checkout\",\n      as: \"/checkout\"\n    }, __jsx(\"a\", {\n      className: \"ps-btn\",\n      style: {\n        color: 'white'\n      }\n    }, \"Checkout\"))))) : __jsx(\"div\", {\n      className: \"ps-cart__content\"\n    }, __jsx(\"div\", {\n      className: \"ps-cart__items\"\n    }, __jsx(\"span\", null, \"No products in cart\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.cart;\n};\n\nexport default connect(mapStateToProps)(MiniCart);","map":null,"metadata":{},"sourceType":"module"}