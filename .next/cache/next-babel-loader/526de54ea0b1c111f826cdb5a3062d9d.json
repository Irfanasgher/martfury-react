{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changeCurrencySaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { actionTypes, changeCurrencySuccess } from './action';\n\nfunction changeCurrencySaga(_ref) {\n  var currency;\n  return _regeneratorRuntime.wrap(function changeCurrencySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          currency = _ref.currency;\n          _context.prev = 1;\n          _context.next = 4;\n          return put(changeCurrencySuccess(currency));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(actionTypes.CHANGE_CURRENCY, changeCurrencySaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/chc-ui/store/setting/saga.js"],"names":["changeCurrencySaga","rootSaga","all","put","takeEvery","actionTypes","changeCurrencySuccess","currency","console","error","CHANGE_CURRENCY"],"mappings":";;;;yBAIUA,kB;;;yBAQeC,Q;;AAZzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AAEA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,UAAnD;;AAEA,SAAUN,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+BO,UAAAA,QAA/B,QAA+BA,QAA/B;AAAA;AAAA;AAEQ,iBAAMJ,GAAG,CAACG,qBAAqB,CAACC,QAAD,CAAtB,CAAT;;AAFR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIQC,UAAAA,OAAO,CAACC,KAAR;;AAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUR,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACE,SAAS,CAACC,WAAW,CAACK,eAAb,EAA8BV,kBAA9B,CAAV,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { actionTypes, changeCurrencySuccess } from './action';\r\n\r\nfunction* changeCurrencySaga({ currency }) {\r\n    try {\r\n        yield put(changeCurrencySuccess(currency));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.CHANGE_CURRENCY, changeCurrencySaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}