{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getCompareListSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addItemSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeItemSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(clearCompareListSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCompareListSuccess, updateCompareListSuccess, addItemSuccess } from './action';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Added to compare list!',\n    description: 'This product has been added to compare list!'\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Removed to compare list',\n    description: 'This product has been removed from compare list!'\n  });\n};\n\nfunction getCompareListSaga() {\n  var localCompareList;\n  return _regeneratorRuntime.wrap(function getCompareListSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          localCompareList = JSON.parse(localStorage.getItem('persist:martfury')).cart;\n          _context.next = 4;\n          return put(getCompareListSuccess(localCompareList));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction addItemSaga(payload) {\n  var product, localCompare, existItem;\n  return _regeneratorRuntime.wrap(function addItemSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          product = payload.product;\n          localCompare = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).compare);\n          existItem = localCompare.compareItems.find(function (item) {\n            return item.id === product.id;\n          });\n\n          if (existItem) {\n            _context2.next = 10;\n            break;\n          }\n\n          product.quantity = 1;\n          localCompare.compareItems.push(product);\n          localCompare.compareTotal++;\n          _context2.next = 10;\n          return put(updateCompareListSuccess(localCompare));\n\n        case 10:\n          _context2.next = 15;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 12]]);\n}\n\nfunction removeItemSaga(payload) {\n  var product, localCompare, index;\n  return _regeneratorRuntime.wrap(function removeItemSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          product = payload.product;\n          localCompare = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).compare);\n          index = localCompare.compareItems.indexOf(product);\n          localCompare.compareTotal = localCompare.compareTotal - 1;\n          localCompare.compareItems.splice(index, 1);\n          _context3.next = 8;\n          return put(updateCompareListSuccess(localCompare));\n\n        case 8:\n          modalWarning('warning');\n          _context3.next = 14;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\n\nfunction clearCompareListSaga() {\n  var emptyCart;\n  return _regeneratorRuntime.wrap(function clearCompareListSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          emptyCart = {\n            compareItems: [],\n            compareTotal: 0\n          };\n          _context4.next = 4;\n          return put(updateCompareListSuccess(emptyCart));\n\n        case 4:\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actionTypes.GET_COMPARE_LIST, getCompareListSaga)]);\n\n        case 2:\n          _context5.next = 4;\n          return all([takeEvery(actionTypes.ADD_ITEM_COMPARE, addItemSaga)]);\n\n        case 4:\n          _context5.next = 6;\n          return all([takeEvery(actionTypes.REMOVE_ITEM_COMPARE, removeItemSaga)]);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/chc-ui/store/compare/saga.js"],"names":["getCompareListSaga","addItemSaga","removeItemSaga","clearCompareListSaga","rootSaga","all","put","takeEvery","notification","actionTypes","getCompareListSuccess","updateCompareListSuccess","addItemSuccess","modalSuccess","type","message","description","modalWarning","localCompareList","JSON","parse","localStorage","getItem","cart","console","log","payload","product","localCompare","compare","existItem","compareItems","find","item","id","quantity","push","compareTotal","index","indexOf","splice","emptyCart","GET_COMPARE_LIST","ADD_ITEM_COMPARE","REMOVE_ITEM_COMPARE"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\nimport {\r\n    actionTypes,\r\n    getCompareListSuccess,\r\n    updateCompareListSuccess,\r\n    addItemSuccess,\r\n} from './action';\r\n\r\nconst modalSuccess = type => {\r\n    notification[type]({\r\n        message: 'Added to compare list!',\r\n        description: 'This product has been added to compare list!',\r\n    });\r\n};\r\n\r\nconst modalWarning = type => {\r\n    notification[type]({\r\n        message: 'Removed to compare list',\r\n        description: 'This product has been removed from compare list!',\r\n    });\r\n};\r\n\r\nfunction* getCompareListSaga() {\r\n    try {\r\n        const localCompareList = JSON.parse(\r\n            localStorage.getItem('persist:martfury')\r\n        ).cart;\r\n        yield put(getCompareListSuccess(localCompareList));\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* addItemSaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        let localCompare = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).compare\r\n        );\r\n\r\n        let existItem = localCompare.compareItems.find(\r\n            item => item.id === product.id\r\n        );\r\n\r\n        if (!existItem) {\r\n            product.quantity = 1;\r\n            localCompare.compareItems.push(product);\r\n            localCompare.compareTotal++;\r\n            yield put(updateCompareListSuccess(localCompare));\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* removeItemSaga(payload) {\r\n    try {\r\n        const { product } = payload;\r\n        let localCompare = JSON.parse(\r\n            JSON.parse(localStorage.getItem('persist:martfury')).compare\r\n        );\r\n        let index = localCompare.compareItems.indexOf(product);\r\n        localCompare.compareTotal = localCompare.compareTotal - 1;\r\n        localCompare.compareItems.splice(index, 1);\r\n        yield put(updateCompareListSuccess(localCompare));\r\n        modalWarning('warning');\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* clearCompareListSaga() {\r\n    try {\r\n        const emptyCart = {\r\n            compareItems: [],\r\n            compareTotal: 0,\r\n        };\r\n        yield put(updateCompareListSuccess(emptyCart));\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([takeEvery(actionTypes.GET_COMPARE_LIST, getCompareListSaga)]);\r\n    yield all([takeEvery(actionTypes.ADD_ITEM_COMPARE, addItemSaga)]);\r\n    yield all([takeEvery(actionTypes.REMOVE_ITEM_COMPARE, removeItemSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}