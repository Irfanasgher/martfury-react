{"ast":null,"code":"var _jsxFileName = \"G:\\\\the-hexaa\\\\ReactJS\\\\martfury_react_package_1_3\\\\martfury-react-1_3\\\\components\\\\partials\\\\shop\\\\modules\\\\ShopWidget.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { Slider, Checkbox } from 'antd';\nimport { getProducts, getTotalProducts, getProductsByPrice, getBrands, getProductsByBrand, getProductCategories, getProductsByCategory } from '../../../../store/product/action';\n\nclass ShopWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      priceMin: 0,\n      priceMax: 2000\n    };\n  }\n\n  handleChangeRange(value) {\n    this.setState({\n      priceMin: value[0],\n      priceMax: value[1]\n    });\n    const params = {\n      price_gt: value[0],\n      price_lt: value[1],\n      _start: 1,\n      _limit: 999\n    };\n    this.props.dispatch(getProductsByPrice(params));\n  }\n\n  handleFilterByBrand(value) {\n    if (value.length > 0) {\n      this.props.dispatch(getProductsByBrand(value));\n      Router.push({\n        pathname: '/shop',\n        query: {\n          brand: value\n        }\n      });\n    } else {\n      const params = {\n        _start: 1,\n        _limit: 12\n      };\n      this.props.dispatch(getProducts(params));\n      this.props.dispatch(getTotalProducts());\n    }\n  }\n\n  handleFilterProductsByCategory(e, slug) {\n    e.preventDefault();\n\n    if (slug !== null) {\n      Router.push({\n        pathname: '/shop',\n        query: {\n          category: slug\n        }\n      });\n      this.props.dispatch(getProductsByCategory(slug));\n    } else {\n      const params = {\n        _start: 1,\n        _limit: 12\n      };\n      this.props.dispatch(getProducts(params));\n      this.props.dispatch(getTotalProducts());\n    }\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getBrands());\n    this.props.dispatch(getProductCategories());\n  }\n\n  render() {\n    const {\n      brands,\n      categories\n    } = this.props;\n    const brandsGroup = [];\n\n    if (brands.length > 0) {\n      brands.forEach(brand => {\n        brandsGroup.push({\n          id: brand.id,\n          value: brand.id,\n          label: brand.name\n        });\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"ps-layout__left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"aside\", {\n      className: \"widget widget_shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"widget-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Categories\"), categories && categories.length > 0 ? __jsx(\"ul\", {\n      className: \"ps-list--categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"/shop\",\n      onClick: e => this.handleFilterProductsByCategory(e, null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"All\")), categories.map(category => __jsx(\"li\", {\n      key: category.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: `shop?category=${category.slug}`,\n      onClick: e => this.handleFilterProductsByCategory(e, category.slug),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, category.name)))) : 'No Category'), __jsx(\"aside\", {\n      className: \"widget widget_shop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"widget-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"By Brands\"), __jsx(\"figure\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(Checkbox.Group, {\n      options: brandsGroup,\n      onChange: this.handleFilterByBrand.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), __jsx(\"figure\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"widget-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"By Price\"), __jsx(Slider, {\n      range: true,\n      defaultValue: [0, 2000],\n      max: 2000,\n      onAfterChange: this.handleChangeRange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Price: $\", this.state.priceMin, \" - $\", this.state.priceMax))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state.product;\n};\n\nexport default connect(mapStateToProps)(ShopWidget);","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/components/partials/shop/modules/ShopWidget.jsx"],"names":["React","Component","Router","connect","Slider","Checkbox","getProducts","getTotalProducts","getProductsByPrice","getBrands","getProductsByBrand","getProductCategories","getProductsByCategory","ShopWidget","constructor","props","state","priceMin","priceMax","handleChangeRange","value","setState","params","price_gt","price_lt","_start","_limit","dispatch","handleFilterByBrand","length","push","pathname","query","brand","handleFilterProductsByCategory","e","slug","preventDefault","category","componentDidMount","render","brands","categories","brandsGroup","forEach","id","label","name","map","bind","mapStateToProps","product"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { Slider, Checkbox } from 'antd';\n\nimport {\n    getProducts,\n    getTotalProducts,\n    getProductsByPrice,\n    getBrands,\n    getProductsByBrand,\n    getProductCategories,\n    getProductsByCategory,\n} from '../../../../store/product/action';\nclass ShopWidget extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            priceMin: 0,\n            priceMax: 2000,\n        };\n    }\n\n    handleChangeRange(value) {\n        this.setState({\n            priceMin: value[0],\n            priceMax: value[1],\n        });\n        const params = {\n            price_gt: value[0],\n            price_lt: value[1],\n            _start: 1,\n            _limit: 999,\n        };\n        this.props.dispatch(getProductsByPrice(params));\n    }\n\n    handleFilterByBrand(value) {\n        if (value.length > 0) {\n            this.props.dispatch(getProductsByBrand(value));\n            Router.push({ pathname: '/shop', query: { brand: value } });\n        } else {\n            const params = {\n                _start: 1,\n                _limit: 12,\n            };\n            this.props.dispatch(getProducts(params));\n            this.props.dispatch(getTotalProducts());\n        }\n    }\n\n    handleFilterProductsByCategory(e, slug) {\n        e.preventDefault();\n        if (slug !== null) {\n            Router.push({ pathname: '/shop', query: { category: slug } });\n            this.props.dispatch(getProductsByCategory(slug));\n        } else {\n            const params = {\n                _start: 1,\n                _limit: 12,\n            };\n            this.props.dispatch(getProducts(params));\n            this.props.dispatch(getTotalProducts());\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getBrands());\n        this.props.dispatch(getProductCategories());\n    }\n\n    render() {\n        const { brands, categories } = this.props;\n        const brandsGroup = [];\n        if (brands.length > 0) {\n            brands.forEach(brand => {\n                brandsGroup.push({\n                    id: brand.id,\n                    value: brand.id,\n                    label: brand.name,\n                });\n            });\n        }\n        return (\n            <div className=\"ps-layout__left\">\n                <aside className=\"widget widget_shop\">\n                    <h4 className=\"widget-title\">Categories</h4>\n                    {categories && categories.length > 0 ? (\n                        <ul className=\"ps-list--categories\">\n                            <li>\n                                <a\n                                    href=\"/shop\"\n                                    onClick={e =>\n                                        this.handleFilterProductsByCategory(\n                                            e,\n                                            null\n                                        )\n                                    }>\n                                    All\n                                </a>\n                            </li>\n                            {categories.map(category => (\n                                <li key={category.id}>\n                                    <a\n                                        href={`shop?category=${category.slug}`}\n                                        onClick={e =>\n                                            this.handleFilterProductsByCategory(\n                                                e,\n                                                category.slug\n                                            )\n                                        }>\n                                        {category.name}\n                                    </a>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        'No Category'\n                    )}\n                </aside>\n                <aside className=\"widget widget_shop\">\n                    <h4 className=\"widget-title\">By Brands</h4>\n                    <figure>\n                        <Checkbox.Group\n                            options={brandsGroup}\n                            onChange={this.handleFilterByBrand.bind(this)}\n                        />\n                    </figure>\n                    <figure>\n                        <h4 className=\"widget-title\">By Price</h4>\n                        <Slider\n                            range\n                            defaultValue={[0, 2000]}\n                            max={2000}\n                            onAfterChange={this.handleChangeRange.bind(this)}\n                        />\n                        <p>\n                            Price: ${this.state.priceMin} - $\n                            {this.state.priceMax}\n                        </p>\n                    </figure>\n                </aside>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return state.product;\n};\nexport default connect(mapStateToProps)(ShopWidget);\n"]},"metadata":{},"sourceType":"module"}