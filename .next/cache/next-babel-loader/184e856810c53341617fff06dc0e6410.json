{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPostsSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getFeaturedPostSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getRecentPostSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPostCategories),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { polyfill } from 'es6-promise';\nimport blogGrid from '../../public/static/data/blog-grid';\nimport { actionTypes, getPostsSuccess, getFeaturedPostSuccess, getPostCategoriesSuccess, getRecentPostsSuccess, getPostsError, getRecentPostsError, getFeaturedPostError, getPostCategoriesError } from './action';\npolyfill();\n\nfunction getPostsSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function getPostsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          data = blogGrid.posts;\n          _context.next = 4;\n          return put(getPostsSuccess(data));\n\n        case 4:\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 10;\n          return put(getPostsError(_context.t0));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction getFeaturedPostSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function getFeaturedPostSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          data = blogGrid.postFeatures;\n          _context2.next = 4;\n          return put(getFeaturedPostSuccess(data));\n\n        case 4:\n          _context2.next = 10;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 10;\n          return put(getFeaturedPostError(_context2.t0));\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nfunction getRecentPostSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function getRecentPostSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          data = blogGrid.recentPosts;\n          _context3.next = 4;\n          return put(getRecentPostsSuccess(data));\n\n        case 4:\n          _context3.next = 10;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 10;\n          return put(getRecentPostsError(_context3.t0));\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6]]);\n}\n\nfunction getPostCategories() {\n  var data;\n  return _regeneratorRuntime.wrap(function getPostCategories$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          data = blogGrid.blogCategories;\n          _context4.next = 4;\n          return put(getPostCategoriesSuccess(data));\n\n        case 4:\n          _context4.next = 10;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 10;\n          return put(getPostCategoriesError(_context4.t0));\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actionTypes.GET_POSTS, getPostsSaga), takeEvery(actionTypes.GET_FEATURED_POST, getFeaturedPostSaga), takeEvery(actionTypes.GET_RECENT_POSTS, getRecentPostSaga), takeEvery(actionTypes.GET_POST_CATEGORIES, getPostCategories)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":null,"metadata":{},"sourceType":"module"}