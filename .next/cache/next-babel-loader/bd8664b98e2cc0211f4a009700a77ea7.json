{"ast":null,"code":"import products from '../../public/static/data/static-products';\nimport brands from '../../public/static/data/static-brands';\nimport categories from '../../public/static/data/static-categories.json';\n\nclass StaticProductRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  getRecords() {\n    return products;\n  }\n\n  getTotalRecords() {\n    return products.length;\n  }\n\n  getBrands() {\n    return brands;\n  }\n\n  getProductCategories() {\n    return categories;\n  }\n\n  getProductsById(payload) {\n    return products.find(product => product.id = payload);\n  }\n\n  getProductsByCategory(payload) {\n    console.log(payload);\n    const category = categories.find(category => category.slug === payload);\n\n    if (category !== undefined) {\n      return category.products;\n    } else {\n      return [];\n    }\n  }\n\n  getProductsByBrands(payload) {\n    const result = brands.filter(({\n      id\n    }) => {\n      return payload.includes(id);\n    });\n    return result;\n  }\n\n  getProductsByPriceRange(payload) {\n    return products.filter(product => product.price >= payload.price_gt && product.price <= payload.price_lt);\n  }\n\n  getProductsByKeyword(payload) {\n    let regexp = new RegExp(payload.toLowerCase(), 'g');\n    return products.filter(product => product.title.toLowerCase().match(regexp));\n  }\n\n}\n\nexport default new StaticProductRepository();","map":null,"metadata":{},"sourceType":"module"}