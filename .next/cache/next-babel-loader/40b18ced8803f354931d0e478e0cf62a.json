{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getWishlistListSuccess, updateWishlistListSuccess } from './action';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Added to wishlisht!',\n    description: 'This product has been added to wishlist!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Removed from wishlist',\n    description: 'This product has been removed from wishlist!'\n  });\n};\n\nfunction* getWishlistListSaga() {\n  try {\n    const localWishlistList = JSON.parse(localStorage.getItem('persist:martfury')).wishlist;\n    yield put(getWishlistListSuccess(localWishlistList));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* addItemToWishlistSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localWishlist = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).wishlist);\n    let existItem = localWishlist.wishlistItems.find(item => item.id === product.id);\n\n    if (!existItem) {\n      localWishlist.wishlistItems.push(product);\n      localWishlist.wishlistTotal++;\n      yield put(updateWishlistListSuccess(localWishlist));\n      modalSuccess('success');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* removeItemWishlistSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    let localWishlist = JSON.parse(JSON.parse(localStorage.getItem('persist:martfury')).wishlist);\n    let index = localWishlist.wishlistItems.indexOf(product);\n    localWishlist.wishlistTotal = localWishlist.wishlistTotal - 1;\n    localWishlist.wishlistItems.splice(index, 1);\n    yield put(updateWishlistListSuccess(localWishlist));\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* clearWishlistListSaga() {\n  try {\n    const emptyCart = {\n      wishlistItems: [],\n      wishlistTotal: 0\n    };\n    yield put(updateWishlistListSuccess(emptyCart));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_WISHLIST_LIST, getWishlistListSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM_WISHLISH, addItemToWishlistSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM_WISHLISH, removeItemWishlistSaga)]);\n}","map":null,"metadata":{},"sourceType":"module"}