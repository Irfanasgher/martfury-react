{"ast":null,"code":"import axios from 'axios';\nvar baseDomain = 'http://45.76.97.89:1337';\n/*const baseDomain = 'http://localhost:1337';*/\n\nvar authorization_prefix = 'Bearer ';\nexport var customHeaders = {\n  Accept: 'application/json'\n  /* Authorization: authorization_prefix + token || undefined*/\n\n};\nexport var baseUrl = \"\".concat(baseDomain);\nexport default axios.create({\n  baseUrl: baseUrl,\n  headers: customHeaders\n});\nexport var serializeQuery = function serializeQuery(query) {\n  return Object.keys(query).map(function (key) {\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(query[key]));\n  }).join('&');\n};","map":{"version":3,"sources":["G:/the-hexaa/ReactJS/martfury_react_package_1_3/martfury-react-1_3/repositories/Repository.js"],"names":["axios","baseDomain","authorization_prefix","customHeaders","Accept","baseUrl","create","headers","serializeQuery","query","Object","keys","map","key","encodeURIComponent","join"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,UAAU,GAAG,yBAAnB;AACA;;AACA,IAAMC,oBAAoB,GAAG,SAA7B;AAEA,OAAO,IAAMC,aAAa,GAAG;AACzBC,EAAAA,MAAM,EAAE;AACR;;AAFyB,CAAtB;AAKP,OAAO,IAAMC,OAAO,aAAMJ,UAAN,CAAb;AAEP,eAAeD,KAAK,CAACM,MAAN,CAAa;AACxBD,EAAAA,OAAO,EAAPA,OADwB;AAExBE,EAAAA,OAAO,EAAEJ;AAFe,CAAb,CAAf;AAKA,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AACnC,SAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EACFG,GADE,CAEC,UAAAC,GAAG;AAAA,qBACIC,kBAAkB,CAACD,GAAD,CADtB,cAC+BC,kBAAkB,CAACL,KAAK,CAACI,GAAD,CAAN,CADjD;AAAA,GAFJ,EAKFE,IALE,CAKG,GALH,CAAP;AAMH,CAPM","sourcesContent":["import axios from 'axios';\nconst baseDomain = 'http://45.76.97.89:1337';\n/*const baseDomain = 'http://localhost:1337';*/\nconst authorization_prefix = 'Bearer ';\n\nexport const customHeaders = {\n    Accept: 'application/json',\n    /* Authorization: authorization_prefix + token || undefined*/\n};\n\nexport const baseUrl = `${baseDomain}`;\n\nexport default axios.create({\n    baseUrl,\n    headers: customHeaders,\n});\n\nexport const serializeQuery = query => {\n    return Object.keys(query)\n        .map(\n            key =>\n                `${encodeURIComponent(key)}=${encodeURIComponent(query[key])}`\n        )\n        .join('&');\n};\n"]},"metadata":{},"sourceType":"module"}